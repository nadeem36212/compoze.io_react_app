{"version":3,"file":"chakra-ui-steps.cjs.production.min.js","sources":["../src/components/Connector/index.tsx","../src/components/Icons/Check.tsx","../src/components/Icons/Close.tsx","../src/components/Step/index.tsx","../src/components/Steps/index.tsx","../src/theme/index.ts","../src/hooks/useSteps.ts"],"sourcesContent":["import {\n  chakra,\n  HTMLChakraProps,\n  ThemingProps,\n  useStyles,\n} from '@chakra-ui/system';\nimport { dataAttr } from '@chakra-ui/utils';\nimport * as React from 'react';\n\ninterface ConnectorProps extends HTMLChakraProps<'div'>, ThemingProps {\n  isCompletedStep: boolean;\n  isVertical: boolean;\n  isLastStep?: boolean;\n  hasLabel?: boolean;\n  orientation?: 'vertical' | 'horizontal';\n}\n\nexport const Connector = React.memo(\n  ({\n    isCompletedStep,\n    isVertical,\n    children,\n    isLastStep,\n    hasLabel,\n  }: ConnectorProps) => {\n    const { connector, stepIconContainer } = useStyles();\n\n    const connectorStyles = {\n      flex: 1,\n      display: 'flex',\n      ...connector,\n    };\n\n    const getMargin = () => {\n      if (isVertical) return `calc(${stepIconContainer.width} / 2)`;\n      if (!hasLabel) return 2;\n      return 0;\n    };\n\n    return (\n      <chakra.div\n        __css={{\n          ms: getMargin(),\n          my: isVertical ? 2 : 0,\n          ps: isVertical ? 4 : 0,\n          me: isVertical ? 0 : 2,\n          height: isVertical ? 'auto' : '2px',\n          alignSelf: isVertical ? 'stretch' : 'auto',\n          borderTopWidth: isLastStep || isVertical ? 0 : '2px',\n          borderInlineStartWidth: isLastStep || !isVertical ? 0 : '2px',\n          minHeight: isLastStep || !isVertical ? 'auto' : '1.5rem',\n          borderColor: connector.borderColor,\n          ...connectorStyles,\n        }}\n        data-highlighted={dataAttr(isCompletedStep)}\n      >\n        {isVertical && children}\n      </chakra.div>\n    );\n  }\n);\n","import { createIcon } from '@chakra-ui/icon';\nimport * as React from 'react';\n\nexport const CheckIcon = createIcon({\n  viewBox: '0 0 14 14',\n  path: (\n    <g fill=\"currentColor\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\" />\n    </g>\n  ),\n});\n","import { createIcon } from '@chakra-ui/icon';\n\nexport const CloseIcon = createIcon({\n  displayName: 'CloseIcon',\n  d:\n    'M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z',\n});\n","import { Flex } from '@chakra-ui/react';\nimport { Spinner } from '@chakra-ui/spinner';\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  useStyles,\n} from '@chakra-ui/system';\nimport { mode } from '@chakra-ui/theme-tools';\nimport { Collapse } from '@chakra-ui/transition';\nimport { dataAttr } from '@chakra-ui/utils';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport * as React from 'react';\nimport { Connector } from '../Connector';\nimport { CheckIcon, CloseIcon } from '../Icons';\n\nconst MotionFlex = motion(Flex);\nconst AnimatedCloseIcon = motion(CloseIcon);\nconst AnimatedSpan = motion(chakra.span);\n\nexport interface StepProps extends HTMLChakraProps<'div'> {\n  label?: string | React.ReactNode;\n  description?: string;\n  icon?: React.ComponentType<any>;\n}\n\n// Props which shouldn't be passed to to the Step component from the user\ninterface StepInternalConfig extends ThemingProps {\n  index: number;\n  isCompletedStep?: boolean;\n  isCurrentStep?: boolean;\n  isLastStep?: boolean;\n  orientation?: 'vertical' | 'horizontal';\n  isLoading?: boolean;\n  isError?: boolean;\n  state?: 'loading' | 'error';\n  checkIcon?: React.ComponentType<any>;\n  clickable?: boolean;\n  onClickStep?: (index: number) => void;\n}\n\nconst animationConfig = {\n  transition: {\n    duration: 0.15,\n  },\n  exit: { scale: 0, opacity: 0 },\n  initial: { scale: 0, opacity: 0 },\n  animate: { scale: 1, opacity: 1 },\n};\n\ninterface FullStepProps extends StepProps, StepInternalConfig {}\n\nexport const Step = forwardRef<StepProps, 'div'>(\n  (props, ref: React.Ref<any>) => {\n    const {\n      checkIcon: CustomCheckIcon,\n      children,\n      colorScheme: c,\n      description: descriptionProp,\n      icon: CustomIcon,\n      index,\n      isCompletedStep,\n      isCurrentStep,\n      isLastStep,\n      label: labelProp,\n      orientation,\n      state,\n      clickable,\n      onClickStep,\n      ...styleProps\n    } = props as FullStepProps;\n\n    const Icon = React.useMemo(() => (CustomIcon ? CustomIcon : null), [\n      CustomIcon,\n    ]);\n\n    const Check = React.useMemo(\n      () => (CustomCheckIcon ? CustomCheckIcon : CheckIcon),\n      [CustomCheckIcon]\n    );\n\n    const {\n      description,\n      icon,\n      label,\n      labelContainer,\n      step,\n      stepContainer,\n      stepIconContainer,\n    } = useStyles();\n\n    const stepStyles = {\n      display: 'flex',\n      position: 'relative',\n      ...step,\n    };\n\n    const stepIconContainerStyles = {\n      display: 'flex',\n      borderRadius: '50%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      ...stepIconContainer,\n    };\n\n    const labelStyles = {\n      fontWeight: 'medium',\n      color: mode(`gray.900`, `gray.100`)(props),\n      textAlign: 'center',\n      fontSize: 'md',\n      ...label,\n    };\n\n    const descriptionStyles = {\n      marginTop: '-2px',\n      color: mode(`gray.800`, `gray.200`)(props),\n      textAlign: 'center',\n      fontSize: 'sm',\n      ...description,\n    };\n\n    const isError = state === 'error';\n    const isLoading = state === 'loading';\n\n    const hasVisited = isCurrentStep || isCompletedStep;\n\n    const opacity = hasVisited ? 1 : 0.8;\n\n    const isVertical = orientation === 'vertical';\n\n    const handleClick = (index: number) => {\n      if (clickable && onClickStep) {\n        onClickStep(index);\n      }\n    };\n\n    const renderIcon = React.useMemo(() => {\n      if (isCompletedStep) {\n        return (\n          <MotionFlex key=\"check-icon\" {...animationConfig}>\n            <Check color=\"white\" style={icon} />\n          </MotionFlex>\n        );\n      }\n      if (isCurrentStep) {\n        if (isError)\n          return (\n            <AnimatedCloseIcon\n              key=\"icon\"\n              color=\"white\"\n              {...animationConfig}\n              style={icon}\n            />\n          );\n        if (isLoading)\n          return (\n            <Spinner\n              width={icon.width as string}\n              height={icon.height as string}\n            />\n          );\n      }\n      if (Icon)\n        return (\n          <MotionFlex key=\"step-icon\" {...animationConfig}>\n            <Icon style={icon} />\n          </MotionFlex>\n        );\n      return (\n        <AnimatedSpan key=\"label\" __css={labelStyles} {...animationConfig}>\n          {(index || 0) + 1}\n        </AnimatedSpan>\n      );\n    }, [isCompletedStep, isCurrentStep, isError, isLoading, Icon, icon]);\n\n    return (\n      <>\n        <chakra.div\n          ref={ref}\n          {...styleProps}\n          onClick={() => handleClick(index)}\n          aria-disabled={!hasVisited}\n          __css={{\n            opacity,\n            flexDir: isVertical ? 'column' : 'row',\n            alignItems: isVertical ? 'flex-start' : 'center',\n            flex: isLastStep && !isVertical ? '0 0 auto' : '1 0 auto',\n            justifyContent:\n              isLastStep && !isVertical ? 'flex-end' : 'flex-start',\n            _hover: {\n              cursor: clickable ? 'pointer' : 'default',\n            },\n            ...stepStyles,\n          }}\n        >\n          <chakra.div\n            __css={{\n              display: 'flex',\n              flexDir: 'row',\n              alignItems: 'center',\n              ...stepContainer,\n            }}\n          >\n            <chakra.div\n              __css={stepIconContainerStyles}\n              aria-current={isCurrentStep ? 'step' : undefined}\n              data-invalid={dataAttr(isCurrentStep && isError)}\n              data-highlighted={dataAttr(isCompletedStep)}\n              data-clickable={dataAttr(clickable)}\n            >\n              <AnimatePresence exitBeforeEnter>{renderIcon}</AnimatePresence>\n            </chakra.div>\n            <chakra.div\n              aria-current={isCurrentStep}\n              __css={{\n                display: 'flex',\n                flexDir: 'column',\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                ...labelContainer,\n              }}\n            >\n              {!!labelProp && (\n                <chakra.span __css={{ mx: 2, opacity, ...labelStyles }}>\n                  {labelProp}\n                </chakra.span>\n              )}\n              {!!descriptionProp && (\n                <chakra.span __css={{ mx: 2, opacity, ...descriptionStyles }}>\n                  {descriptionProp}\n                </chakra.span>\n              )}\n            </chakra.div>\n          </chakra.div>\n          <Connector\n            colorScheme={c}\n            isLastStep={isLastStep}\n            isVertical={isVertical}\n            isCompletedStep={isCompletedStep || false}\n            hasLabel={!!labelProp || !!descriptionProp}\n          >\n            <Collapse style={{ width: '100%' }} in={isCurrentStep}>\n              {(isCurrentStep || isCompletedStep) && children}\n            </Collapse>\n          </Connector>\n        </chakra.div>\n      </>\n    );\n  }\n);\n","import { useMediaQuery } from '@chakra-ui/react';\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n} from '@chakra-ui/system';\nimport { cx } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nexport interface StepsProps extends HTMLChakraProps<'div'>, ThemingProps {\n  activeStep: number;\n  orientation?: 'vertical' | 'horizontal';\n  state?: 'loading' | 'error';\n  responsive?: boolean;\n  checkIcon?: React.ComponentType<any>;\n  onClickStep?: (step: number) => void;\n}\n\nexport const Steps = forwardRef<StepsProps, 'div'>(\n  (props, ref: React.Ref<HTMLDivElement>) => {\n    const styles = useMultiStyleConfig('Steps', props);\n\n    const stepsStyles = {\n      fontFamily: 'heading',\n      textAlign: 'center',\n      width: '100%',\n      display: 'flex',\n      flex: 1,\n      ...styles.steps,\n    };\n\n    const {\n      className,\n      activeStep,\n      children,\n      orientation: orientationProp,\n      state,\n      responsive,\n      checkIcon,\n      onClickStep,\n      ...rest\n    } = omitThemingProps(props);\n\n    const childArr = React.Children.toArray(children);\n\n    const stepCount = childArr.length;\n\n    const renderHorizontalContent = () => {\n      if (activeStep <= childArr.length) {\n        return React.Children.map(childArr[activeStep], node => {\n          if (!React.isValidElement(node)) return;\n          return React.Children.map(\n            node.props.children,\n            childNode => childNode\n          );\n        });\n      }\n      return null;\n    };\n\n    const clickable = !!onClickStep;\n\n    const [isMobile] = useMediaQuery('(max-width: 43em)');\n\n    const orientation = isMobile && responsive ? 'vertical' : orientationProp;\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          __css={{\n            justifyContent: stepCount === 1 ? 'flex-end' : 'space-between',\n            flexDir: orientation === 'vertical' ? 'column' : 'row',\n            ...stepsStyles,\n          }}\n          className={cx('chakra-steps', className)}\n          {...rest}\n        >\n          {React.Children.map(children, (child, i) => {\n            const isCompletedStep =\n              (React.isValidElement(child) && child.props.isCompletedStep) ??\n              i < activeStep;\n            const isLastStep = i === stepCount - 1;\n            const isCurrentStep = i === activeStep;\n\n            const stepProps = {\n              index: i,\n              colorScheme: props.colorScheme,\n              isCompletedStep,\n              isCurrentStep,\n              isLastStep,\n              orientation,\n              state,\n              checkIcon,\n              clickable,\n              onClickStep,\n            };\n\n            return React.isValidElement(child)\n              ? React.cloneElement(child, stepProps)\n              : null;\n          })}\n        </chakra.div>\n        {orientation === 'horizontal' && renderHorizontalContent()}\n      </StylesProvider>\n    );\n  }\n);\n\nSteps.defaultProps = {\n  activeStep: 0,\n  colorScheme: 'green',\n  orientation: 'horizontal',\n  responsive: true,\n};\n","import {\n  anatomy,\n  darken,\n  lighten,\n  mode,\n  PartsStyleFunction,\n  SystemStyleFunction,\n  SystemStyleObject,\n} from '@chakra-ui/theme-tools';\n\nconst parts = anatomy('steps').parts(\n  'connector',\n  'description',\n  'icon',\n  'label',\n  'labelContainer',\n  'step',\n  'stepContainer',\n  'stepIconContainer',\n  'steps'\n);\n\nconst baseStyleIcon: SystemStyleObject = {\n  strokeWidth: '2px',\n};\n\nconst baseStyleLabel: SystemStyleFunction = props => ({\n  color: mode(`gray.900`, `gray.100`)(props),\n});\n\nconst baseStyleDescription: SystemStyleFunction = props => ({\n  color: mode(`gray.800`, `gray.200`)(props),\n});\n\nconst baseStyleConnector: SystemStyleFunction = props => {\n  const { colorScheme: c } = props;\n  const inactiveColor = mode('gray.200', 'gray.700')(props);\n  const activeColor = mode(`${c}.500`, `${c}.200`)(props);\n\n  return {\n    borderColor: inactiveColor,\n    transitionProperty: 'border-color',\n    transitionDuration: 'normal',\n    _highlighted: {\n      borderColor: activeColor,\n    },\n  };\n};\n\nconst baseStyleStepIconContainer: SystemStyleFunction = props => {\n  const { colorScheme: c } = props;\n  const inactiveColor = mode('gray.200', 'gray.700')(props);\n  const activeColor = `${c}.500`;\n\n  return {\n    bg: inactiveColor,\n    borderColor: inactiveColor,\n    transitionProperty: 'background, border-color',\n    transitionDuration: 'normal',\n    _activeStep: {\n      bg: mode(darken(inactiveColor, 0.5), lighten(inactiveColor, 0.5))(props),\n      borderColor: activeColor,\n      _invalid: {\n        bg: 'red.500',\n        borderColor: 'red.500',\n      },\n    },\n    _highlighted: {\n      bg: activeColor,\n      borderColor: activeColor,\n    },\n    '&[data-clickable]:hover': {\n      borderColor: activeColor,\n    },\n  };\n};\n\nconst baseStyle: PartsStyleFunction<typeof parts> = props => ({\n  connector: baseStyleConnector(props),\n  description: baseStyleDescription(props),\n  icon: baseStyleIcon,\n  label: baseStyleLabel(props),\n  labelContainer: {},\n  step: {},\n  stepContainer: {},\n  stepIconContainer: baseStyleStepIconContainer(props),\n  steps: {},\n});\n\nconst sizes = {\n  sm: {\n    stepIconContainer: {\n      width: '32px',\n      height: '32px',\n      borderWidth: '2px',\n    },\n    icon: {\n      width: '14px',\n      height: '14px',\n    },\n    label: {\n      fontWeight: 'medium',\n      textAlign: 'center',\n      fontSize: 'sm',\n    },\n    description: {\n      fontWeight: '300',\n      textAlign: 'center',\n      fontSize: 'xs',\n    },\n  },\n  md: {\n    stepIconContainer: {\n      width: '40px',\n      height: '40px',\n      borderWidth: '2px',\n    },\n    icon: {\n      width: '18px',\n      height: '18px',\n    },\n    label: {\n      fontWeight: 'medium',\n      textAlign: 'center',\n      fontSize: 'md',\n    },\n    description: {\n      fontWeight: '300',\n      textAlign: 'center',\n      fontSize: 'sm',\n    },\n  },\n  lg: {\n    stepIconContainer: {\n      width: '48px',\n      height: '48px',\n      borderWidth: '2px',\n    },\n    icon: {\n      width: '22px',\n      height: '22px',\n    },\n    label: {\n      fontWeight: 'bold',\n      textAlign: 'center',\n      fontSize: 'lg',\n    },\n    description: {\n      fontWeight: '300',\n      textAlign: 'center',\n      fontSize: 'md',\n    },\n  },\n};\n\nconst defaultProps = {\n  size: 'md',\n  colorScheme: 'green',\n};\n\nexport const StepsStyleConfig = {\n  parts: parts.keys,\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n","import * as React from 'react';\ntype UseSteps = {\n  initialStep: number;\n};\n\nexport function useSteps({ initialStep }: UseSteps) {\n  const [activeStep, setActiveStep] = React.useState(initialStep);\n\n  const nextStep = () => {\n    setActiveStep(prev => prev + 1);\n  };\n\n  const prevStep = () => {\n    setActiveStep(prev => prev - 1);\n  };\n\n  const reset = () => {\n    setActiveStep(initialStep);\n  };\n\n  const setStep = (step: number) => {\n    setActiveStep(step);\n  };\n\n  return { nextStep, prevStep, reset, setStep, activeStep };\n}\n"],"names":["Connector","React","isCompletedStep","isVertical","children","isLastStep","hasLabel","useStyles","connector","stepIconContainer","connectorStyles","flex","display","chakra","div","__css","ms","width","my","ps","me","height","alignSelf","borderTopWidth","borderInlineStartWidth","minHeight","borderColor","dataAttr","CheckIcon","createIcon","viewBox","path","fill","points","CloseIcon","displayName","d","MotionFlex","motion","Flex","AnimatedCloseIcon","AnimatedSpan","span","animationConfig","transition","duration","exit","scale","opacity","initial","animate","Step","forwardRef","props","ref","CustomCheckIcon","checkIcon","c","colorScheme","descriptionProp","description","CustomIcon","icon","index","isCurrentStep","labelProp","label","orientation","state","clickable","onClickStep","styleProps","Icon","Check","labelContainer","stepContainer","stepStyles","position","step","stepIconContainerStyles","borderRadius","alignItems","justifyContent","labelStyles","fontWeight","color","mode","textAlign","fontSize","descriptionStyles","marginTop","isError","isLoading","hasVisited","renderIcon","key","style","Spinner","onClick","handleClick","flexDir","_hover","cursor","undefined","AnimatePresence","exitBeforeEnter","mx","Collapse","Steps","styles","useMultiStyleConfig","stepsStyles","fontFamily","steps","omitThemingProps","className","activeStep","orientationProp","responsive","rest","childArr","toArray","stepCount","length","useMediaQuery","StylesProvider","value","cx","map","child","i","stepProps","node","childNode","defaultProps","baseStyleIcon","strokeWidth","baseStyleLabel","baseStyleDescription","baseStyleConnector","transitionProperty","transitionDuration","_highlighted","baseStyleStepIconContainer","inactiveColor","activeColor","bg","_activeStep","darken","lighten","_invalid","StepsStyleConfig","parts","anatomy","keys","baseStyle","sizes","sm","borderWidth","md","lg","size","initialStep","setActiveStep","nextStep","prev","prevStep","reset","setStep"],"mappings":"wqBAiBO,IAAMA,EAAYC,QACvB,gBACEC,IAAAA,gBACAC,IAAAA,WACAC,IAAAA,SACAC,IAAAA,WACAC,IAAAA,WAEyCC,cAAjCC,IAAAA,UAAWC,IAAAA,kBAEbC,KACJC,KAAM,EACNC,QAAS,QACNJ,UAUHP,gBAACY,SAAOC,KACNC,SACEC,GARAb,UAA2BM,EAAkBQ,cAC5CX,EACE,EADe,EAQlBY,GAAIf,EAAa,EAAI,EACrBgB,GAAIhB,EAAa,EAAI,EACrBiB,GAAIjB,EAAa,EAAI,EACrBkB,OAAQlB,EAAa,OAAS,MAC9BmB,UAAWnB,EAAa,UAAY,OACpCoB,eAAgBlB,GAAcF,EAAa,EAAI,MAC/CqB,uBAAwBnB,IAAeF,EAAa,EAAI,MACxDsB,UAAWpB,IAAeF,EAAa,OAAS,SAChDuB,YAAalB,EAAUkB,aACpBhB,sBAEaiB,WAASzB,IAE1BC,GAAcC,MCrDVwB,EAAYC,aAAW,CAClCC,QAAS,YACTC,KACE9B,qBAAG+B,KAAK,gBACN/B,2BAASgC,OAAO,qFCLTC,EAAYL,aAAW,CAClCM,YAAa,YACbC,EACE,kcCYEC,EAAaC,SAAOC,QACpBC,EAAoBF,SAAOJ,GAC3BO,EAAeH,SAAOzB,SAAO6B,MAuB7BC,EAAkB,CACtBC,WAAY,CACVC,SAAU,KAEZC,KAAM,CAAEC,MAAO,EAAGC,QAAS,GAC3BC,QAAS,CAAEF,MAAO,EAAGC,QAAS,GAC9BE,QAAS,CAAEH,MAAO,EAAGC,QAAS,IAKnBG,EAAOC,cAClB,SAACC,EAAOC,OAEOC,EAeTF,EAfFG,UACApD,EAcEiD,EAdFjD,SACaqD,EAaXJ,EAbFK,YACaC,EAYXN,EAZFO,YACMC,EAWJR,EAXFS,KACAC,EAUEV,EAVFU,MACA7D,EASEmD,EATFnD,gBACA8D,EAQEX,EARFW,cACA3D,EAOEgD,EAPFhD,WACO4D,EAMLZ,EANFa,MACAC,EAKEd,EALFc,YACAC,EAIEf,EAJFe,MACAC,EAGEhB,EAHFgB,UACAC,EAEEjB,EAFFiB,YACGC,IACDlB,KAEEmB,EAAOvE,WAAc,kBAAO4D,GAA0B,OAAO,CACjEA,IAGIY,EAAQxE,WACZ,kBAAOsD,GAAoC3B,IAC3C,CAAC2B,MAWChD,cAPFqD,IAAAA,YACAE,IAAAA,KACAI,IAAAA,MACAQ,IAAAA,eAEAC,IAAAA,cACAlE,IAAAA,kBAGImE,KACJhE,QAAS,OACTiE,SAAU,cAPVC,MAWIC,KACJnE,QAAS,OACToE,aAAc,MACdC,WAAY,SACZC,eAAgB,UACbzE,GAGC0E,KACJC,WAAY,SACZC,MAAOC,6BAAAA,CAA6BjC,GACpCkC,UAAW,SACXC,SAAU,MACPtB,GAGCuB,KACJC,UAAW,OACXL,MAAOC,6BAAAA,CAA6BjC,GACpCkC,UAAW,SACXC,SAAU,MACP5B,GAGC+B,EAAoB,UAAVvB,EACVwB,EAAsB,YAAVxB,EAEZyB,EAAa7B,GAAiB9D,EAE9B8C,EAAU6C,EAAa,EAAI,GAE3B1F,EAA6B,aAAhBgE,EAQb2B,EAAa7F,WAAc,cAC3BC,SAEAD,gBAACoC,iBAAW0D,IAAI,cAAiBpD,GAC/B1C,gBAACwE,GAAMY,MAAM,QAAQW,MAAOlC,QAI9BE,EAAe,IACb2B,EACF,OACE1F,gBAACuC,iBACCuD,IAAI,OACJV,MAAM,SACF1C,GACJqD,MAAOlC,QAGT8B,EACF,OACE3F,gBAACgG,WACChF,MAAO6C,EAAK7C,MACZI,OAAQyC,EAAKzC,gBAIjBmD,EAEAvE,gBAACoC,iBAAW0D,IAAI,aAAgBpD,GAC9B1C,gBAACuE,GAAKwB,MAAOlC,KAIjB7D,gBAACwC,iBAAasD,IAAI,QAAQhF,MAAOoE,GAAiBxC,IAC9CoB,GAAS,GAAK,KAGnB,CAAC7D,EAAiB8D,EAAe2B,EAASC,EAAWpB,EAAMV,WAG5D7D,gCACEA,gBAACY,SAAOC,mBACNwC,IAAKA,GACDiB,GACJ2B,QAAS,kBAlDK,SAACnC,GACfM,GAAaC,GACfA,EAAYP,GAgDKoC,CAAYpC,qBACX8B,EAChB9E,SACEiC,QAAAA,EACAoD,QAASjG,EAAa,SAAW,MACjC8E,WAAY9E,EAAa,aAAe,SACxCQ,KAAMN,IAAeF,EAAa,WAAa,WAC/C+E,eACE7E,IAAeF,EAAa,WAAa,aAC3CkG,OAAQ,CACNC,OAAQjC,EAAY,UAAY,YAE/BO,KAGL3E,gBAACY,SAAOC,KACNC,SACEH,QAAS,OACTwF,QAAS,MACTnB,WAAY,UACTN,IAGL1E,gBAACY,SAAOC,KACNC,MAAOgE,iBACOf,EAAgB,YAASuC,iBACzB5E,WAASqC,GAAiB2B,sBACtBhE,WAASzB,oBACXyB,WAAS0C,IAEzBpE,gBAACuG,mBAAgBC,oBAAiBX,IAEpC7F,gBAACY,SAAOC,oBACQkD,EACdjD,SACEH,QAAS,OACTwF,QAAS,SACTlB,eAAgB,SAChBD,WAAY,cACTP,MAGFT,GACDhE,gBAACY,SAAO6B,MAAK3B,SAAS2F,GAAI,EAAG1D,QAAAA,GAAYmC,IACtClB,KAGFN,GACD1D,gBAACY,SAAO6B,MAAK3B,SAAS2F,GAAI,EAAG1D,QAAAA,GAAYyC,IACtC9B,KAKT1D,gBAACD,GACC0D,YAAaD,EACbpD,WAAYA,EACZF,WAAYA,EACZD,gBAAiBA,IAAmB,EACpCI,WAAY2D,KAAeN,GAE3B1D,gBAAC0G,YAASX,MAAO,CAAE/E,MAAO,WAAc+C,IACpCA,GAAiB9D,IAAoBE,8GC7NxCwG,EAAQxD,cACnB,SAACC,EAAOC,OACAuD,EAASC,sBAAoB,QAASzD,GAEtC0D,KACJC,WAAY,UACZzB,UAAW,SACXtE,MAAO,OACPL,QAAS,OACTD,KAAM,GACHkG,EAAOI,SAaRC,mBAAiB7D,GATnB8D,IAAAA,UACAC,IAAAA,WACAhH,IAAAA,SACaiH,IAAblD,YACAC,IAAAA,MACAkD,IAAAA,WACA9D,IAAAA,UACAc,IAAAA,YACGiD,SAGCC,EAAWvH,WAAewH,QAAQrH,GAElCsH,EAAYF,EAASG,OAerBtD,IAAcC,EAIdH,EAFayD,gBAAc,yBAEDN,EAAa,WAAaD,SAGxDpH,gBAAC4H,kBAAeC,MAAOjB,GACrB5G,gBAACY,SAAOC,mBACNwC,IAAKA,EACLvC,SACEmE,eAA8B,IAAdwC,EAAkB,WAAa,gBAC/CtB,QAAyB,aAAhBjC,EAA6B,SAAW,OAC9C4C,GAELI,UAAWY,KAAG,eAAgBZ,IAC1BI,GAEHtH,WAAe+H,IAAI5H,GAAU,SAAC6H,EAAOC,SAC9BhI,WACHD,iBAAqBgI,IAAUA,EAAM5E,MAAMnD,mBAC5CgI,EAAId,EAIAe,EAAY,CAChBpE,MAAOmE,EACPxE,YAAaL,EAAMK,YACnBxD,gBAAAA,EACA8D,cANoBkE,IAAMd,EAO1B/G,WARiB6H,IAAMR,EAAY,EASnCvD,YAAAA,EACAC,MAAAA,EACAZ,UAAAA,EACAa,UAAAA,EACAC,YAAAA,UAGKrE,iBAAqBgI,GACxBhI,eAAmBgI,EAAOE,GAC1B,SAGS,eAAhBhE,IAvDCiD,GAAcI,EAASG,OAClB1H,WAAe+H,IAAIR,EAASJ,IAAa,SAAAgB,MACzCnI,iBAAqBmI,UACnBnI,WAAe+H,IACpBI,EAAK/E,MAAMjD,UACX,SAAAiI,UAAaA,QAIZ,UAoDbzB,EAAM0B,aAAe,CACnBlB,WAAY,EACZ1D,YAAa,QACbS,YAAa,aACbmD,YAAY,GC3Gd,IAYMiB,EAAmC,CACvCC,YAAa,OAGTC,EAAsC,SAAApF,SAAU,CACpDgC,MAAOC,6BAAAA,CAA6BjC,KAGhCqF,EAA4C,SAAArF,SAAU,CAC1DgC,MAAOC,6BAAAA,CAA6BjC,KAGhCsF,EAA0C,SAAAtF,OACzBI,EAAMJ,EAAnBK,kBAID,CACLhC,YAJoB4D,OAAK,WAAY,WAAjBA,CAA6BjC,GAKjDuF,mBAAoB,eACpBC,mBAAoB,SACpBC,aAAc,CACZpH,YAPgB4D,OAAQ7B,SAAYA,SAApB6B,CAA6BjC,MAY7C0F,EAAkD,SAAA1F,OACjCI,EAAMJ,EAAnBK,YACFsF,EAAgB1D,OAAK,WAAY,WAAjBA,CAA6BjC,GAC7C4F,EAAiBxF,eAEhB,CACLyF,GAAIF,EACJtH,YAAasH,EACbJ,mBAAoB,2BACpBC,mBAAoB,SACpBM,YAAa,CACXD,GAAI5D,OAAK8D,SAAOJ,EAAe,IAAMK,UAAQL,EAAe,IAAxD1D,CAA8DjC,GAClE3B,YAAauH,EACbK,SAAU,CACRJ,GAAI,UACJxH,YAAa,YAGjBoH,aAAc,CACZI,GAAID,EACJvH,YAAauH,6BAEY,CACzBvH,YAAauH,KAwFNM,EAAmB,CAC9BC,MAvJYC,UAAQ,SAASD,MAC7B,YACA,cACA,OACA,QACA,iBACA,OACA,gBACA,oBACA,SA8IaE,KACbC,UArFkD,SAAAtG,SAAU,CAC5D7C,UAAWmI,EAAmBtF,GAC9BO,YAAa8E,EAAqBrF,GAClCS,KAAMyE,EACNrE,MAAOuE,EAAepF,GACtBqB,eAAgB,GAChBI,KAAM,GACNH,cAAe,GACflE,kBAAmBsI,EAA2B1F,GAC9C4D,MAAO,KA6EP2C,MA1EY,CACZC,GAAI,CACFpJ,kBAAmB,CACjBQ,MAAO,OACPI,OAAQ,OACRyI,YAAa,OAEfhG,KAAM,CACJ7C,MAAO,OACPI,OAAQ,QAEV6C,MAAO,CACLkB,WAAY,SACZG,UAAW,SACXC,SAAU,MAEZ5B,YAAa,CACXwB,WAAY,MACZG,UAAW,SACXC,SAAU,OAGduE,GAAI,CACFtJ,kBAAmB,CACjBQ,MAAO,OACPI,OAAQ,OACRyI,YAAa,OAEfhG,KAAM,CACJ7C,MAAO,OACPI,OAAQ,QAEV6C,MAAO,CACLkB,WAAY,SACZG,UAAW,SACXC,SAAU,MAEZ5B,YAAa,CACXwB,WAAY,MACZG,UAAW,SACXC,SAAU,OAGdwE,GAAI,CACFvJ,kBAAmB,CACjBQ,MAAO,OACPI,OAAQ,OACRyI,YAAa,OAEfhG,KAAM,CACJ7C,MAAO,OACPI,OAAQ,QAEV6C,MAAO,CACLkB,WAAY,OACZG,UAAW,SACXC,SAAU,MAEZ5B,YAAa,CACXwB,WAAY,MACZG,UAAW,SACXC,SAAU,QAcd8C,aATmB,CACnB2B,KAAM,KACNvG,YAAa,qGCxJYwG,IAAAA,cACWjK,WAAeiK,GAAhCC,aAkBZ,CAAEC,SAhBQ,WACfD,GAAc,SAAAE,UAAQA,EAAO,MAeZC,SAZF,WACfH,GAAc,SAAAE,UAAQA,EAAO,MAWFE,MARf,WACZJ,EAAcD,IAOoBM,QAJpB,SAAC1F,GACfqF,EAAcrF,IAG6BsC"}