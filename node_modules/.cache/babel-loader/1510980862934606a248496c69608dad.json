{"ast":null,"code":"/**\n * Given an object with CSS/SVG transform definitions, return the string value\n * for use with the `transform` CSS property or SVG attribute. Note that we\n * can't always guarantee the order will match the author's intended order, so\n * authors should only use the object notation if they know that their transform\n * is commutative or that there is only one.\n * @param {Object} obj An object of transform definitions.\n * @returns {String} The generated transform string.\n */\nexport var toTransformString = function toTransformString(obj) {\n  for (var _len = arguments.length, more = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    more[_key - 1] = arguments[_key];\n  }\n  if (more.length > 0) {\n    return more.reduce(function (memo, currentObj) {\n      return [memo, toTransformString(currentObj)].join(\" \");\n    }, toTransformString(obj)).trim();\n  }\n  if (obj === undefined || obj === null || typeof obj === \"string\") {\n    return obj;\n  }\n  var transforms = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      var value = obj[key];\n      transforms.push(\"\".concat(key, \"(\").concat(value, \")\"));\n    }\n  }\n  return transforms.join(\" \").trim();\n};\n/**\n * Given the name of a color scale, getColorScale will return an array\n * of 5 hex string values in that color scale. If no 'name' parameter\n * is given, it will return the Victory default grayscale.\n * @param {String} name The name of the color scale to return (optional).\n * @returns {Array} An array of 5 hex string values composing a color scale.\n */\n\nexport function getColorScale(name) {\n  var scales = {\n    grayscale: [\"#cccccc\", \"#969696\", \"#636363\", \"#252525\"],\n    qualitative: [\"#334D5C\", \"#45B29D\", \"#EFC94C\", \"#E27A3F\", \"#DF5A49\", \"#4F7DA1\", \"#55DBC1\", \"#EFDA97\", \"#E2A37F\", \"#DF948A\"],\n    heatmap: [\"#428517\", \"#77D200\", \"#D6D305\", \"#EC8E19\", \"#C92B05\"],\n    warm: [\"#940031\", \"#C43343\", \"#DC5429\", \"#FF821D\", \"#FFAF55\"],\n    cool: [\"#2746B9\", \"#0B69D4\", \"#2794DB\", \"#31BB76\", \"#60E83B\"],\n    red: [\"#FCAE91\", \"#FB6A4A\", \"#DE2D26\", \"#A50F15\", \"#750B0E\"],\n    blue: [\"#002C61\", \"#004B8F\", \"#006BC9\", \"#3795E5\", \"#65B4F4\"],\n    green: [\"#354722\", \"#466631\", \"#649146\", \"#8AB25C\", \"#A9C97E\"]\n  };\n  return name ? scales[name] : scales.grayscale;\n}","map":{"version":3,"names":["toTransformString","obj","_len","arguments","length","more","Array","_key","reduce","memo","currentObj","join","trim","undefined","transforms","key","hasOwnProperty","value","push","concat","getColorScale","name","scales","grayscale","qualitative","heatmap","warm","cool","red","blue","green"],"sources":["/Users/naeem/syntaxroot/compoze.io_react_app/node_modules/victory-core/es/victory-util/style.js"],"sourcesContent":["/**\n * Given an object with CSS/SVG transform definitions, return the string value\n * for use with the `transform` CSS property or SVG attribute. Note that we\n * can't always guarantee the order will match the author's intended order, so\n * authors should only use the object notation if they know that their transform\n * is commutative or that there is only one.\n * @param {Object} obj An object of transform definitions.\n * @returns {String} The generated transform string.\n */\nexport var toTransformString = function (obj) {\n  for (var _len = arguments.length, more = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    more[_key - 1] = arguments[_key];\n  }\n\n  if (more.length > 0) {\n    return more.reduce(function (memo, currentObj) {\n      return [memo, toTransformString(currentObj)].join(\" \");\n    }, toTransformString(obj)).trim();\n  }\n\n  if (obj === undefined || obj === null || typeof obj === \"string\") {\n    return obj;\n  }\n\n  var transforms = [];\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      var value = obj[key];\n      transforms.push(\"\".concat(key, \"(\").concat(value, \")\"));\n    }\n  }\n\n  return transforms.join(\" \").trim();\n};\n/**\n * Given the name of a color scale, getColorScale will return an array\n * of 5 hex string values in that color scale. If no 'name' parameter\n * is given, it will return the Victory default grayscale.\n * @param {String} name The name of the color scale to return (optional).\n * @returns {Array} An array of 5 hex string values composing a color scale.\n */\n\nexport function getColorScale(name) {\n  var scales = {\n    grayscale: [\"#cccccc\", \"#969696\", \"#636363\", \"#252525\"],\n    qualitative: [\"#334D5C\", \"#45B29D\", \"#EFC94C\", \"#E27A3F\", \"#DF5A49\", \"#4F7DA1\", \"#55DBC1\", \"#EFDA97\", \"#E2A37F\", \"#DF948A\"],\n    heatmap: [\"#428517\", \"#77D200\", \"#D6D305\", \"#EC8E19\", \"#C92B05\"],\n    warm: [\"#940031\", \"#C43343\", \"#DC5429\", \"#FF821D\", \"#FFAF55\"],\n    cool: [\"#2746B9\", \"#0B69D4\", \"#2794DB\", \"#31BB76\", \"#60E83B\"],\n    red: [\"#FCAE91\", \"#FB6A4A\", \"#DE2D26\", \"#A50F15\", \"#750B0E\"],\n    blue: [\"#002C61\", \"#004B8F\", \"#006BC9\", \"#3795E5\", \"#65B4F4\"],\n    green: [\"#354722\", \"#466631\", \"#649146\", \"#8AB25C\", \"#A9C97E\"]\n  };\n  return name ? scales[name] : scales.grayscale;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAaC,GAAG,EAAE;EAC5C,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAClC;EAEA,IAAIF,IAAI,CAACD,MAAM,GAAG,CAAC,EAAE;IACnB,OAAOC,IAAI,CAACG,MAAM,CAAC,UAAUC,IAAI,EAAEC,UAAU,EAAE;MAC7C,OAAO,CAACD,IAAI,EAAET,iBAAiB,CAACU,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACxD,CAAC,EAAEX,iBAAiB,CAACC,GAAG,CAAC,CAAC,CAACW,IAAI,EAAE;EACnC;EAEA,IAAIX,GAAG,KAAKY,SAAS,IAAIZ,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAChE,OAAOA,GAAG;EACZ;EAEA,IAAIa,UAAU,GAAG,EAAE;EAEnB,KAAK,IAAIC,GAAG,IAAId,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACe,cAAc,CAACD,GAAG,CAAC,EAAE;MAC3B,IAAIE,KAAK,GAAGhB,GAAG,CAACc,GAAG,CAAC;MACpBD,UAAU,CAACI,IAAI,CAAC,EAAE,CAACC,MAAM,CAACJ,GAAG,EAAE,GAAG,CAAC,CAACI,MAAM,CAACF,KAAK,EAAE,GAAG,CAAC,CAAC;IACzD;EACF;EAEA,OAAOH,UAAU,CAACH,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;AACpC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASQ,aAAa,CAACC,IAAI,EAAE;EAClC,IAAIC,MAAM,GAAG;IACXC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACvDC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3HC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAChEC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC7DC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC7DC,GAAG,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5DC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC7DC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;EAC/D,CAAC;EACD,OAAOT,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC,GAAGC,MAAM,CAACC,SAAS;AAC/C"},"metadata":{},"sourceType":"module"}