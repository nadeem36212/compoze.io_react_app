{"ast":null,"code":"import _objectSpread from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/components/Table.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useTable } from 'react-table';\nimport { Table, Thead, Tbody, Tr, Th, Td, Box } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var DataTable = function DataTable(_ref) {\n  _s();\n  var columns = _ref.columns,\n    data = _ref.data,\n    _onClick = _ref.onClick;\n  // Use the state and functions returned from useTable to build your UI\n  var _useTable = useTable({\n      columns: columns,\n      data: data\n    }),\n    getTableProps = _useTable.getTableProps,\n    getTableBodyProps = _useTable.getTableBodyProps,\n    headerGroups = _useTable.headerGroups,\n    rows = _useTable.rows,\n    prepareRow = _useTable.prepareRow;\n\n  // Render the UI for your table\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n      variant: \"simple\",\n      fontFamily: \"Lato\",\n      size: \"md\",\n      mt: 4,\n      mb: 10\n    }, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        bg: \"gray.200\",\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(Tr, _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(Th, _objectSpread(_objectSpread({\n                fontSize: 11\n              }, column.getHeaderProps()), {}, {\n                children: column.render('Header')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Tbody, _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: rows.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(Tr, _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            onClick: function onClick() {\n              if (_onClick) {\n                _onClick(row);\n              }\n            },\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(Td, _objectSpread(_objectSpread({\n                lineHeight: 1.1\n              }, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n_s(DataTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["useTable","Table","Thead","Tbody","Tr","Th","Td","Box","DataTable","columns","data","onClick","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/components/Table.tsx"],"sourcesContent":["import { Row, useTable } from 'react-table';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Heading,\n  Box,\n} from '@chakra-ui/react';\n\ntype DataTableProps = {\n  // title: string;\n  columns: any;\n  data: any[];\n  onClick?: (row: Row<any>) => void;\n};\n\nexport const DataTable = ({\n  // title,\n  columns,\n  data,\n  onClick,\n}: DataTableProps): JSX.Element => {\n  // Use the state and functions returned from useTable to build your UI\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data,\n    });\n\n  // Render the UI for your table\n  return (\n    <Box>\n      {/* <Heading textAlign='center'>{title}</Heading> */}\n      <Table\n        variant='simple'\n        fontFamily='Lato'\n        size='md'\n        mt={4}\n        mb={10}\n        {...getTableProps()}\n      >\n        <Thead bg='gray.200'>\n          {headerGroups.map((headerGroup) => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <Th fontSize={11} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </Th>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <Tr\n                {...row.getRowProps()}\n                onClick={() => {\n                  if (onClick) {\n                    onClick(row);\n                  }\n                }}\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <Td lineHeight={1.1} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </Td>\n                  );\n                })}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    </Box>\n  );\n};\n"],"mappings":";;;;AAAA,SAAcA,QAAQ,QAAQ,aAAa;AAC3C,SACEC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,EAAE,EACFC,EAAE,EACFC,EAAE,EAEFC,GAAG,QACE,kBAAkB;AAAC;AAS1B,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAKa;EAAA;EAAA,IAHjCC,OAAO,QAAPA,OAAO;IACPC,IAAI,QAAJA,IAAI;IACJC,QAAO,QAAPA,OAAO;EAEP;EACA,gBACEX,QAAQ,CAAC;MACPS,OAAO,EAAPA,OAAO;MACPC,IAAI,EAAJA;IACF,CAAC,CAAC;IAJIE,aAAa,aAAbA,aAAa;IAAEC,iBAAiB,aAAjBA,iBAAiB;IAAEC,YAAY,aAAZA,YAAY;IAAEC,IAAI,aAAJA,IAAI;IAAEC,UAAU,aAAVA,UAAU;;EAMxE;EACA,oBACE,QAAC,GAAG;IAAA,uBAEF,QAAC,KAAK;MACJ,OAAO,EAAC,QAAQ;MAChB,UAAU,EAAC,MAAM;MACjB,IAAI,EAAC,IAAI;MACT,EAAE,EAAE,CAAE;MACN,EAAE,EAAE;IAAG,GACHJ,aAAa,EAAE;MAAA,wBAEnB,QAAC,KAAK;QAAC,EAAE,EAAC,UAAU;QAAA,UACjBE,YAAY,CAACG,GAAG,CAAC,UAACC,WAAW;UAAA,oBAC5B,QAAC,EAAE,kCAAKA,WAAW,CAACC,mBAAmB,EAAE;YAAA,UACtCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAAC,UAACI,MAAM;cAAA,oBAC9B,QAAC,EAAE;gBAAC,QAAQ,EAAE;cAAG,GAAKA,MAAM,CAACC,cAAc,EAAE;gBAAA,UAC1CD,MAAM,CAACE,MAAM,CAAC,QAAQ;cAAC;gBAAA;gBAAA;gBAAA;cAAA,SACrB;YAAA,CACN;UAAC;YAAA;YAAA;YAAA;UAAA,SACC;QAAA,CACN;MAAC;QAAA;QAAA;QAAA;MAAA,SACI,eACR,QAAC,KAAK,kCAAKV,iBAAiB,EAAE;QAAA,UAC3BE,IAAI,CAACE,GAAG,CAAC,UAACO,GAAG,EAAEC,CAAC,EAAK;UACpBT,UAAU,CAACQ,GAAG,CAAC;UACf,oBACE,QAAC,EAAE,kCACGA,GAAG,CAACE,WAAW,EAAE;YACrB,OAAO,EAAE,mBAAM;cACb,IAAIf,QAAO,EAAE;gBACXA,QAAO,CAACa,GAAG,CAAC;cACd;YACF,CAAE;YAAA,UAEDA,GAAG,CAACG,KAAK,CAACV,GAAG,CAAC,UAACW,IAAI,EAAK;cACvB,oBACE,QAAC,EAAE;gBAAC,UAAU,EAAE;cAAI,GAAKA,IAAI,CAACC,YAAY,EAAE;gBAAA,UACzCD,IAAI,CAACL,MAAM,CAAC,MAAM;cAAC;gBAAA;gBAAA;gBAAA;cAAA,SACjB;YAET,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,SACC;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,SACI;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,SACJ;AAEV,CAAC;AAAC,GA9DWf,SAAS;EAAA,QAQlBR,QAAQ;AAAA;AAAA,KARCQ,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}