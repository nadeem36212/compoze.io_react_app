{"ast":null,"code":"import { __read, __values } from \"tslib\";\nexport function parseQueryString(querystring) {\n  var e_1, _a;\n  var query = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n  if (querystring) {\n    try {\n      for (var _b = __values(querystring.split(\"&\")), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var pair = _c.value;\n        var _d = __read(pair.split(\"=\"), 2),\n          key = _d[0],\n          _e = _d[1],\n          value = _e === void 0 ? null : _e;\n        key = decodeURIComponent(key);\n        if (value) {\n          value = decodeURIComponent(value);\n        }\n        if (!(key in query)) {\n          query[key] = value;\n        } else if (Array.isArray(query[key])) {\n          query[key].push(value);\n        } else {\n          query[key] = [query[key], value];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n  return query;\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";AAEA,OAAM,SAAU,gBAAgB,CAAC,WAAmB,EAAA;;EAClD,IAAM,KAAK,GAAsB,CAAA,CAAE;EACnC,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAE5C,IAAI,WAAW,EAAE;;MACf,KAAmB,IAAA,EAAA,GAAA,QAAA,CAAA,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAE;QAAtC,IAAM,IAAI,GAAA,EAAA,CAAA,KAAA;QACT,IAAA,EAAA,GAAA,MAAA,CAAsB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAA,CAAA,CAAA;UAApC,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA;UAAE,EAAA,GAAA,EAAA,CAAA,CAAA,CAAY;UAAZ,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAI,GAAA,EAAmB;QACzC,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC;QAC7B,IAAI,KAAK,EAAE;UACT,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC;QAClC;QACD,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE;UACnB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK;SACnB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;UACnC,KAAK,CAAC,GAAG,CAAmB,CAAC,IAAI,CAAC,KAAe,CAAC;SACpD,MAAM;UACL,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAW,EAAE,KAAe,CAAC;QACrD;MACF;;;;;;;;;;;;EACF;EAED,OAAO,KAAK;AACd","sourcesContent":["import { QueryParameterBag } from \"@aws-sdk/types\";\n\nexport function parseQueryString(querystring: string): QueryParameterBag {\n  const query: QueryParameterBag = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n\n  if (querystring) {\n    for (const pair of querystring.split(\"&\")) {\n      let [key, value = null] = pair.split(\"=\");\n      key = decodeURIComponent(key);\n      if (value) {\n        value = decodeURIComponent(value);\n      }\n      if (!(key in query)) {\n        query[key] = value;\n      } else if (Array.isArray(query[key])) {\n        (query[key] as Array<string>).push(value as string);\n      } else {\n        query[key] = [query[key] as string, value as string];\n      }\n    }\n  }\n\n  return query;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}