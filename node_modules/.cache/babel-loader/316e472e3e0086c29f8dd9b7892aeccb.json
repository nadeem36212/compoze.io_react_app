{"ast":null,"code":"import _slicedToArray from \"/Users/naeem/syntaxroot/compoze.io_react_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/naeem/syntaxroot/compoze.io_react_app/src/features/products/create/CreateProductPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavBar from \"../../../navigation/navbar\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport ConfirmProductCreate from './ConfirmProductCreate';\nimport CreateForm from './CreateForm';\nimport SelectAccount from './SelectAccount';\nimport { fetchAccounts, selectAccountState } from '../../account/accountSlice';\nimport SelectProductName from './SelectProductName';\nimport SelectRegion from './SelectRegion';\nimport { createNewProduct } from '../productSlice';\nimport EnvironmentSelection from './EnvironmentSelection';\nimport routes from '../../../routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateProductPage() {\n  _s();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    account = _useState2[0],\n    setAccount = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    region = _useState4[0],\n    setRegion = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    environments = _useState6[0],\n    setEnvironments = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    regionOptions = _useState8[0],\n    setRegionOptions = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    name = _useState10[0],\n    _setName = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    formFilledOut = _useState12[0],\n    setFormFilledOut = _useState12[1];\n  var accounts = useAppSelector(selectAccountState);\n  var history = useHistory();\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    dispatch(fetchAccounts());\n  }, []);\n  var navigateToProductsPage = function navigateToProductsPage() {\n    history.push(routes.PRODUCTS.path);\n  };\n  var accountOptions = accounts.map(function (account) {\n    return {\n      value: account.accountId,\n      displayName: account.name\n    };\n  });\n  var steps = [{\n    label: 'Provide a Name',\n    content: /*#__PURE__*/_jsxDEV(SelectProductName, {\n      setName: function setName(name) {\n        _setName(name);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }, this)\n  }, {\n    label: 'Select Account',\n    content: /*#__PURE__*/_jsxDEV(SelectAccount, {\n      onChange: function onChange(event) {\n        var selectedAccount = event.target.value;\n        var account = accounts.find(function (account) {\n          return account.name === selectedAccount;\n        });\n        setAccount(account);\n        setRegionOptions(account.regions.map(function (region) {\n          return {\n            value: region.id,\n            displayName: region.region\n          };\n        }));\n      },\n      accountOptions: accountOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }, this)\n  }, {\n    label: 'Region',\n    content: /*#__PURE__*/_jsxDEV(SelectRegion, {\n      regionOptions: regionOptions,\n      onChange: function onChange(event) {\n        var selectedRegion = regionOptions.find(function (option) {\n          return option.displayName === event.target.value;\n        });\n        setRegion(selectedRegion);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }, this)\n  }, {\n    label: 'Environments',\n    content: /*#__PURE__*/_jsxDEV(EnvironmentSelection, {\n      setEnvironments: setEnvironments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 39\n    }, this)\n  }];\n  var _finishForm = function finishForm() {\n    setFormFilledOut(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container py-3\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), accounts && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateComponent container py-3\",\n      children: [!formFilledOut && /*#__PURE__*/_jsxDEV(CreateForm, {\n        heading: \"Create Your Product\",\n        steps: steps,\n        finishForm: function finishForm() {\n          return _finishForm();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), formFilledOut && /*#__PURE__*/_jsxDEV(ConfirmProductCreate, {\n        name: name,\n        account: account,\n        region: region,\n        environments: environments,\n        onSubmit: function onSubmit(account, region, name) {\n          console.log(account, region, name);\n          dispatch(createNewProduct({\n            accountId: account.id,\n            name: name,\n            region: region.displayName,\n            createVpc: true,\n            environments: environments.split(',')\n          })).then(function () {\n            navigateToProductsPage();\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateProductPage, \"AKeGptUGM/qTa2g1ur51nlZmanI=\", false, function () {\n  return [useAppSelector, useHistory, useAppDispatch];\n});\n_c = CreateProductPage;\nvar _c;\n$RefreshReg$(_c, \"CreateProductPage\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","useHistory","useAppDispatch","useAppSelector","ConfirmProductCreate","CreateForm","SelectAccount","fetchAccounts","selectAccountState","SelectProductName","SelectRegion","createNewProduct","EnvironmentSelection","routes","CreateProductPage","account","setAccount","region","setRegion","environments","setEnvironments","regionOptions","setRegionOptions","name","setName","formFilledOut","setFormFilledOut","accounts","history","dispatch","navigateToProductsPage","push","PRODUCTS","path","accountOptions","map","value","accountId","displayName","steps","label","content","event","selectedAccount","target","find","regions","id","selectedRegion","option","finishForm","console","log","createVpc","split","then"],"sources":["/Users/naeem/syntaxroot/compoze.io_react_app/src/features/products/create/CreateProductPage.tsx"],"sourcesContent":["import {\n  Flex,\n  Button,\n} from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react';\n\nimport NavBar from \"../../../navigation/navbar\";\nimport { useHistory } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport ConfirmProductCreate from './ConfirmProductCreate';\nimport CreateForm from './CreateForm';\nimport SelectAccount from './SelectAccount';\nimport { Account, fetchAccounts, selectAccountState } from '../../account/accountSlice';\nimport SelectProductName from './SelectProductName';\nimport SelectRegion from './SelectRegion';\nimport { CompozeFormOption } from '../../../components/form/CompozeFormOption';\nimport { createNewProduct } from '../productSlice';\nimport EnvironmentSelection from './EnvironmentSelection';\nimport routes from '../../../routes';\n\n\nexport default function CreateProductPage() {\n  const [account, setAccount] = useState<Account>()\n  const [region, setRegion] = useState({} as CompozeFormOption)\n  const [environments, setEnvironments] = useState<string>()\n  const [regionOptions, setRegionOptions] = useState([] as CompozeFormOption[])\n  const [name, setName] = useState('')\n  const [formFilledOut, setFormFilledOut] = useState(false)\n  const accounts = useAppSelector(selectAccountState);\n\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchAccounts());\n  }, []);\n\n  const navigateToProductsPage = () => {\n    history.push(routes.PRODUCTS.path);\n  }\n  const accountOptions = accounts.map(account => {\n    return { value: account.accountId, displayName: account.name };\n  });\n  const steps = [\n    {\n      label: 'Provide a Name', content: <SelectProductName setName={(name: any) => {\n        setName(name)\n      }} />\n    },\n    {\n      label: 'Select Account', content: <SelectAccount onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n        const selectedAccount = event.target.value;\n        const account = accounts.find(account => account.name === selectedAccount)!;\n        setAccount(account)\n        setRegionOptions(account.regions.map(region => {\n          return { value: region.id, displayName: region.region };\n        }))\n      }} accountOptions={accountOptions} />\n    },\n    {\n      label: 'Region', content: <SelectRegion regionOptions={regionOptions} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n        const selectedRegion = regionOptions.find(option => option.displayName === event.target.value)!;\n        setRegion(selectedRegion);\n      }}\n      />\n    },\n    { label: 'Environments', content: <EnvironmentSelection setEnvironments={setEnvironments} /> }\n  ];\n\n\n  const finishForm = () => {\n    setFormFilledOut(true);\n  }\n\n  return (\n    <div className='App container py-3'>\n      <NavBar />\n      {\n        (accounts) &&\n        <div className='CreateComponent container py-3'>\n          {!formFilledOut &&\n            <CreateForm heading='Create Your Product' steps={steps} finishForm={() => finishForm()} />\n          }\n          {formFilledOut &&\n            <ConfirmProductCreate name={name} account={account!} region={region} environments={environments!}\n\n              onSubmit={(account: Account, region: CompozeFormOption, name: string) => {\n                console.log(account, region, name)\n\n                dispatch(createNewProduct(\n                  {\n                    accountId: account.id,\n                    name: name,\n                    region: region.displayName,\n                    createVpc: true,\n                    environments: environments!.split(',')\n                  }\n                ))\n                  .then(() => {\n                    navigateToProductsPage();\n                  })\n              }}\n            />\n          }\n        </div>\n      }\n\n    </div >\n  );\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}