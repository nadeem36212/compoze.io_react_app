{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */function () {\n  /**\n   * @constructor\n   * Initialize with configurations\n   * @param {Object} options\n   */\n  function I18n(options) {\n    /**\n     * @private\n     */\n    this._options = null;\n    /**\n     * @private\n     */\n    this._lang = null;\n    /**\n     * @private\n     */\n    this._dict = {};\n    this._options = Object.assign({}, options);\n    this._lang = this._options.language;\n    if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n      this._lang = window.navigator.language;\n    }\n    logger.debug(this._lang);\n  }\n  /**\n   * @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  I18n.prototype.setLanguage = function (lang) {\n    this._lang = lang;\n  };\n  /**\n   * @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  I18n.prototype.get = function (key, defVal) {\n    if (defVal === void 0) {\n      defVal = undefined;\n    }\n    if (!this._lang) {\n      return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    var lang = this._lang;\n    var val = this.getByLanguage(key, lang);\n    if (val) {\n      return val;\n    }\n    if (lang.indexOf('-') > 0) {\n      val = this.getByLanguage(key, lang.split('-')[0]);\n    }\n    if (val) {\n      return val;\n    }\n    return typeof defVal !== 'undefined' ? defVal : key;\n  };\n  /**\n   * @method\n   * Get value according to specified language\n   * @param {String} key\n   * @param {String} language - Specified langurage to be used\n   * @param {String} defVal - Default value\n   */\n  I18n.prototype.getByLanguage = function (key, language, defVal) {\n    if (defVal === void 0) {\n      defVal = null;\n    }\n    if (!language) {\n      return defVal;\n    }\n    var lang_dict = this._dict[language];\n    if (!lang_dict) {\n      return defVal;\n    }\n    return lang_dict[key];\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n    var lang_dict = this._dict[language];\n    if (!lang_dict) {\n      lang_dict = this._dict[language] = {};\n    }\n    Object.assign(lang_dict, vocabularies);\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  I18n.prototype.putVocabularies = function (vocabularies) {\n    var _this = this;\n    Object.keys(vocabularies).map(function (key) {\n      _this.putVocabulariesForLanguage(key, vocabularies[key]);\n    });\n  };\n  return I18n;\n}();\nexport { I18n };","map":{"version":3,"sources":["../../src/I18n/I18n.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */ (function () {\n    /**\n     * @constructor\n     * Initialize with configurations\n     * @param {Object} options\n     */\n    function I18n(options) {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n        this._options = Object.assign({}, options);\n        this._lang = this._options.language;\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.prototype.setLanguage = function (lang) {\n        this._lang = lang;\n    };\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.get = function (key, defVal) {\n        if (defVal === void 0) { defVal = undefined; }\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        var lang = this._lang;\n        var val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    };\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.getByLanguage = function (key, language, defVal) {\n        if (defVal === void 0) { defVal = null; }\n        if (!language) {\n            return defVal;\n        }\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            return defVal;\n        }\n        return lang_dict[key];\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            lang_dict = this._dict[language] = {};\n        }\n        Object.assign(lang_dict, vocabularies);\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.prototype.putVocabularies = function (vocabularies) {\n        var _this = this;\n        Object.keys(vocabularies).map(function (key) {\n            _this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    };\n    return I18n;\n}());\nexport { I18n };\n//# sourceMappingURL=I18n.js.map"]},"metadata":{},"sourceType":"module"}