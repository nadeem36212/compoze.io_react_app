{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport var serializerMiddleware = function serializerMiddleware(options, serializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, serializer(args.input, options)];\n            case 1:\n              request = _a.sent();\n              return [2 /*return*/, next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"sources":["../../src/serializerMiddleware.ts"],"names":[],"mappings":";AAUA,OAAO,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAC/B,OAAqB,EACrB,UAAgD,EAAA;EACT,OAAA,UACvC,IAAqC,EACrC,OAAgC,EAAA;IACI,OAAA,UACpC,IAAsC,EAAA;MAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;cAEtB,OAAA,CAAA,CAAA,CAAA,WAAM,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;;cAA/C,OAAO,GAAG,EAAA,CAAA,IAAA,EAAqC;cACrD,OAAA,CAAA,CAAA,CAAA,YAAO,IAAI,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACN,IAAI,CAAA,EAAA;gBACP,OAAO,EAAA;cAAA,CAAA,CAAA,CACP,CAAA;UAAC;;;KACJ;EARqC,CAQrC;AAXwC,CAWxC","sourcesContent":["import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const request = await serializer(args.input, options);\n  return next({\n    ...args,\n    request,\n  });\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}