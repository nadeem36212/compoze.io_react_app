{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { browserOrNode, isWebWorker } from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\nvar ReachabilityNavigator = /** @class */function () {\n  function ReachabilityNavigator() {}\n  ReachabilityNavigator.prototype.networkMonitor = function (netInfo) {\n    if (browserOrNode().isNode) {\n      return Observable.from([{\n        online: true\n      }]);\n    }\n    var globalObj = isWebWorker() ? self : window;\n    return new Observable(function (observer) {\n      observer.next({\n        online: globalObj.navigator.onLine\n      });\n      var notifyOnline = function notifyOnline() {\n        return observer.next({\n          online: true\n        });\n      };\n      var notifyOffline = function notifyOffline() {\n        return observer.next({\n          online: false\n        });\n      };\n      globalObj.addEventListener('online', notifyOnline);\n      globalObj.addEventListener('offline', notifyOffline);\n      ReachabilityNavigator._observers.push(observer);\n      return function () {\n        globalObj.removeEventListener('online', notifyOnline);\n        globalObj.removeEventListener('offline', notifyOffline);\n        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {\n          return _observer !== observer;\n        });\n      };\n    });\n  };\n  // expose observers to simulate offline mode for integration testing\n  ReachabilityNavigator._observerOverride = function (status) {\n    var e_1, _a;\n    var _loop_1 = function _loop_1(observer) {\n      if (observer.closed) {\n        ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) {\n          return _observer !== observer;\n        });\n        return \"continue\";\n      }\n      observer.next(status);\n    };\n    try {\n      for (var _b = __values(ReachabilityNavigator._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var observer = _c.value;\n        _loop_1(observer);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  ReachabilityNavigator._observers = [];\n  return ReachabilityNavigator;\n}();\nexport default ReachabilityNavigator;","map":{"version":3,"sources":["../../src/Util/Reachability.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAS,aAAa,EAAE,WAAW,QAAQ,mBAAmB;AAC9D,OAAO,UAA6B,MAAM,mBAAmB;AAM7D,IAAA,qBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,qBAAA,GAAA,CA8CA;EAzCC,qBAAA,CAAA,SAAA,CAAA,cAAc,GAAd,UAAe,OAAa,EAAA;IAC3B,IAAI,aAAa,EAAE,CAAC,MAAM,EAAE;MAC3B,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;QAAE,MAAM,EAAE;MAAI,CAAE,CAAC,CAAC;IAC1C;IAED,IAAM,SAAS,GAAG,WAAW,EAAE,GAAG,IAAI,GAAG,MAAM;IAE/C,OAAO,IAAI,UAAU,CAAC,UAAA,QAAQ,EAAA;MAC7B,QAAQ,CAAC,IAAI,CAAC;QAAE,MAAM,EAAE,SAAS,CAAC,SAAS,CAAC;MAAM,CAAE,CAAC;MAErD,IAAM,YAAY,GAAG,SAAf,YAAY,GAAG;QAAM,OAAA,QAAQ,CAAC,IAAI,CAAC;UAAE,MAAM,EAAE;QAAI,CAAE,CAAC;MAA/B,CAA+B;MAC1D,IAAM,aAAa,GAAG,SAAhB,aAAa,GAAG;QAAM,OAAA,QAAQ,CAAC,IAAI,CAAC;UAAE,MAAM,EAAE;QAAK,CAAE,CAAC;MAAhC,CAAgC;MAE5D,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC;MAClD,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC;MAEpD,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;MAE/C,OAAO,YAAA;QACN,SAAS,CAAC,mBAAmB,CAAC,QAAQ,EAAE,YAAY,CAAC;QACrD,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC;QAEvD,qBAAqB,CAAC,UAAU,GAAG,qBAAqB,CAAC,UAAU,CAAC,MAAM,CACzE,UAAA,SAAS,EAAA;UAAI,OAAA,SAAS,KAAK,QAAQ;QAAtB,CAAsB,CACnC;MACF,CAAC;IACF,CAAC,CAAC;EACH,CAAC;EAED;EACe,qBAAA,CAAA,iBAAiB,GAAhC,UAAiC,MAAqB,EAAA;;mCAC1C,QAAQ,EAAA;MAClB,IAAI,QAAQ,CAAC,MAAM,EAAE;QACpB,qBAAqB,CAAC,UAAU,GAAG,qBAAqB,CAAC,UAAU,CAAC,MAAM,CACzE,UAAA,SAAS,EAAA;UAAI,OAAA,SAAS,KAAK,QAAQ;QAAtB,CAAsB,CACnC;;MAED;MACD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;;;MAPtB,KAAuB,IAAA,EAAA,GAAA,QAAA,CAAA,qBAAqB,CAAC,UAAU,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA;QAAlD,IAAM,QAAQ,GAAA,EAAA,CAAA,KAAA;gBAAR,QAAQ,CAAA;MAQlB;;;;;;;;;;;;EACF,CAAC;EA5Cc,qBAAA,CAAA,UAAU,GAErB,EAAE;EA2CP,OAAA,qBAAC;CAAA,EAAA;eA9CoB,qBAAqB","sourceRoot":"","sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { browserOrNode, isWebWorker } from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\nvar ReachabilityNavigator = /** @class */ (function () {\n    function ReachabilityNavigator() {\n    }\n    ReachabilityNavigator.prototype.networkMonitor = function (netInfo) {\n        if (browserOrNode().isNode) {\n            return Observable.from([{ online: true }]);\n        }\n        var globalObj = isWebWorker() ? self : window;\n        return new Observable(function (observer) {\n            observer.next({ online: globalObj.navigator.onLine });\n            var notifyOnline = function () { return observer.next({ online: true }); };\n            var notifyOffline = function () { return observer.next({ online: false }); };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            ReachabilityNavigator._observers.push(observer);\n            return function () {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) { return _observer !== observer; });\n            };\n        });\n    };\n    // expose observers to simulate offline mode for integration testing\n    ReachabilityNavigator._observerOverride = function (status) {\n        var e_1, _a;\n        var _loop_1 = function (observer) {\n            if (observer.closed) {\n                ReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(function (_observer) { return _observer !== observer; });\n                return \"continue\";\n            }\n            observer.next(status);\n        };\n        try {\n            for (var _b = __values(ReachabilityNavigator._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var observer = _c.value;\n                _loop_1(observer);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    ReachabilityNavigator._observers = [];\n    return ReachabilityNavigator;\n}());\nexport default ReachabilityNavigator;\n//# sourceMappingURL=Reachability.js.map"]},"metadata":{},"sourceType":"module"}