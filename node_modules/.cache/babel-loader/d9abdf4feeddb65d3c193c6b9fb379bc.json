{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var selectAlertError = function selectAlertError(state) {\n  return state.alerts.error;\n};\nexport var selectAlertSuccess = function selectAlertSuccess(state) {\n  return state.alerts.success;\n};\nexport var alertSlice = createSlice({\n  name: 'alerts/details',\n  initialState: {\n    error: '',\n    success: ''\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setAlertError: function setAlertError(state, action) {\n      state.error = action.payload;\n    },\n    setAlertSuccess: function setAlertSuccess(state, action) {\n      state.success = action.payload;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: function extraReducers(builder) {}\n});\nvar _alertSlice$actions = alertSlice.actions,\n  setAlertError = _alertSlice$actions.setAlertError,\n  setAlertSuccess = _alertSlice$actions.setAlertSuccess;\nexport { setAlertError, setAlertSuccess };\nexport default alertSlice.reducer;","map":{"version":3,"names":["createSlice","selectAlertError","state","alerts","error","selectAlertSuccess","success","alertSlice","name","initialState","reducers","setAlertError","action","payload","setAlertSuccess","extraReducers","builder","actions","reducer"],"sources":["/Users/naeem/syntaxroot/compoze.io_react_app/src/features/alertSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const selectAlertError = (state: any) => state.alerts.error;\nexport const selectAlertSuccess = (state: any) => state.alerts.success;\n\n\nexport const alertSlice = createSlice({\n    name: 'alerts/details',\n    initialState: { error: '', success: '' },\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        setAlertError: (state, action: PayloadAction<string>) => {\n            state.error = action.payload;\n        },\n        setAlertSuccess: (state, action: PayloadAction<string>) => {\n            state.success = action.payload;\n        },\n    },\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\n    // including actions generated by createAsyncThunk or in other slices.\n    extraReducers: (builder) => {\n\n    },\n\n});\n\nexport const { setAlertError,setAlertSuccess } = alertSlice.actions;\n\nexport default alertSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,KAAU;EAAA,OAAKA,KAAK,CAACC,MAAM,CAACC,KAAK;AAAA;AAClE,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIH,KAAU;EAAA,OAAKA,KAAK,CAACC,MAAM,CAACG,OAAO;AAAA;AAGtE,OAAO,IAAMC,UAAU,GAAGP,WAAW,CAAC;EAClCQ,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE;IAAEL,KAAK,EAAE,EAAE;IAAEE,OAAO,EAAE;EAAG,CAAC;EACxC;EACAI,QAAQ,EAAE;IACNC,aAAa,EAAE,uBAACT,KAAK,EAAEU,MAA6B,EAAK;MACrDV,KAAK,CAACE,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,eAAe,EAAE,yBAACZ,KAAK,EAAEU,MAA6B,EAAK;MACvDV,KAAK,CAACI,OAAO,GAAGM,MAAM,CAACC,OAAO;IAClC;EACJ,CAAC;EACD;EACA;EACAE,aAAa,EAAE,uBAACC,OAAO,EAAK,CAE5B;AAEJ,CAAC,CAAC;AAEK,0BAA0CT,UAAU,CAACU,OAAO;EAApDN,aAAa,uBAAbA,aAAa;EAACG,eAAe,uBAAfA,eAAe;AAAwB;AAEpE,eAAeP,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module"}