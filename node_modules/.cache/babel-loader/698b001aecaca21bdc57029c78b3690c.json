{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getComplianceByAccountID } from '../compliance/complianceAPI';\nimport { getAccountComplianceDetails, getResourceInventory } from './complianceDetailsAPI';\n// import { fetchCount } from './counterAPI';\n\nvar initialState = {\n  complianceDetails: undefined,\n  resourceInventory: undefined,\n  accountComplianceStatus: undefined\n};\nexport var fetchComplianceDetails = createAsyncThunk('compliance/details/fetch', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var id, response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _ref.id;\n            _context.next = 3;\n            return getAccountComplianceDetails(id);\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var fetchResourceInventory = createAsyncThunk('compliance/details/resources/fetch', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {\n    var id, response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = _ref3.id;\n            _context2.next = 3;\n            return getResourceInventory(id);\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var fetchComplianceStatus = createAsyncThunk('compliance/details/status/fetch', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref5) {\n    var id, compliance;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = _ref5.id;\n            _context3.next = 3;\n            return getComplianceByAccountID(id);\n          case 3:\n            compliance = _context3.sent;\n            return _context3.abrupt(\"return\", compliance);\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return function (_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}());\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport var selectComplianceDetails = function selectComplianceDetails(state) {\n  return state.complianceDetails.complianceDetails;\n};\nexport var selectResourceInventory = function selectResourceInventory(state) {\n  return state.complianceDetails.resourceInventory;\n};\nexport var selectAccountComplianceStatus = function selectAccountComplianceStatus(state) {\n  return state.complianceDetails.accountComplianceStatus;\n};\nexport var complianceDetailSlice = createSlice({\n  name: 'compliance/details',\n  initialState: initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchComplianceDetails.fulfilled, function (state, action) {\n      state.complianceDetails = action.payload;\n    }).addCase(fetchResourceInventory.fulfilled, function (state, action) {\n      state.resourceInventory = action.payload;\n    }).addCase(fetchComplianceStatus.fulfilled, function (state, action) {\n      state.accountComplianceStatus = action.payload;\n    });\n  }\n});\nexport default complianceDetailSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getComplianceByAccountID","getAccountComplianceDetails","getResourceInventory","initialState","complianceDetails","undefined","resourceInventory","accountComplianceStatus","fetchComplianceDetails","id","response","fetchResourceInventory","fetchComplianceStatus","compliance","selectComplianceDetails","state","selectResourceInventory","selectAccountComplianceStatus","complianceDetailSlice","name","reducers","extraReducers","builder","addCase","fulfilled","action","payload","reducer"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/complianceDetails/compliantDetailsSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport { getComplianceByAccountID } from '../compliance/complianceAPI';\nimport { AccountComplianceSummary, fetchCompliance } from '../compliance/compliantSlice';\nimport { getAccountComplianceDetails, getResourceInventory } from './complianceDetailsAPI';\n// import { fetchCount } from './counterAPI';\n\nexport interface ComplianceDetails {\n  complianceStatus: string;\n  ruleName: string;\n  severity: string;\n}\n\nexport interface ResourceSummary {\n  /**\n   * List of resource types\n   */\n  resources: ResourceCount[],\n  /**\n   * Total number of resources for the account\n   */\n  total: number\n}\nexport interface ResourceCount {\n  /**\n   * <p>The resource type (for example,\n   * \t\t\t\t<code>\"AWS::EC2::Instance\"</code>).</p>\n   */\n  resourceType: string;\n  /**\n   * <p>The number of resources.</p>\n   */\n  count: number;\n}\n\nexport interface ComplianceState {\n  complianceDetails: ComplianceDetails[] | undefined\n  resourceInventory: ResourceSummary | undefined\n  accountComplianceStatus: AccountComplianceSummary | undefined\n\n}\n\ninterface GetAccountComplianceDetailsThunkArgs {\n  id: string\n}\n\nconst initialState: ComplianceState = {\n  complianceDetails: undefined,\n  resourceInventory: undefined,\n  accountComplianceStatus: undefined,\n};\n\nexport const fetchComplianceDetails = createAsyncThunk(\n  'compliance/details/fetch',\n  async ({ id }: GetAccountComplianceDetailsThunkArgs) => {\n    const response = await getAccountComplianceDetails(id)\n    return response\n  }\n\n);\n\nexport const fetchResourceInventory = createAsyncThunk(\n  'compliance/details/resources/fetch',\n  async ({ id }: GetAccountComplianceDetailsThunkArgs) => {\n    const response = await getResourceInventory(id)\n    return response\n  }\n\n);\nexport const fetchComplianceStatus = createAsyncThunk(\n  'compliance/details/status/fetch',\n  async ({ id }: GetAccountComplianceDetailsThunkArgs) => {\n    const compliance: AccountComplianceSummary = await getComplianceByAccountID(id)\n    // const response = await getCosts(orgId);\n\n    // The value we return becomes the `fulfilled` action payload\n    return compliance;\n  }\n);\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectComplianceDetails = (state: RootState) => state.complianceDetails.complianceDetails;\nexport const selectResourceInventory = (state: RootState) => state.complianceDetails.resourceInventory;\nexport const selectAccountComplianceStatus = (state: RootState) => state.complianceDetails.accountComplianceStatus;\n\n\nexport const complianceDetailSlice = createSlice({\n  name: 'compliance/details',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchComplianceDetails.fulfilled, (state, action) => {\n        state.complianceDetails = action.payload;\n      })\n      .addCase(fetchResourceInventory.fulfilled, (state, action) => {\n        state.resourceInventory = action.payload;\n      })\n      .addCase(fetchComplianceStatus.fulfilled, (state, action) => {\n        state.accountComplianceStatus = action.payload;\n      });\n  },\n\n});\n\n\nexport default complianceDetailSlice.reducer;\n"],"mappings":";;AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,wBAAwB,QAAQ,6BAA6B;AAEtE,SAASC,2BAA2B,EAAEC,oBAAoB,QAAQ,wBAAwB;AAC1F;;AAyCA,IAAMC,YAA6B,GAAG;EACpCC,iBAAiB,EAAEC,SAAS;EAC5BC,iBAAiB,EAAED,SAAS;EAC5BE,uBAAuB,EAAEF;AAC3B,CAAC;AAED,OAAO,IAAMG,sBAAsB,GAAGV,gBAAgB,CACpD,0BAA0B;EAAA,uEAC1B;IAAA;IAAA;MAAA;QAAA;UAAA;YAASW,EAAE,QAAFA,EAAE;YAAA;YAAA,OACcR,2BAA2B,CAACQ,EAAE,CAAC;UAAA;YAAhDC,QAAQ;YAAA,iCACPA,QAAQ;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChB;EAAA;IAAA;EAAA;AAAA,IAEF;AAED,OAAO,IAAMC,sBAAsB,GAAGb,gBAAgB,CACpD,oCAAoC;EAAA,uEACpC;IAAA;IAAA;MAAA;QAAA;UAAA;YAASW,EAAE,SAAFA,EAAE;YAAA;YAAA,OACcP,oBAAoB,CAACO,EAAE,CAAC;UAAA;YAAzCC,QAAQ;YAAA,kCACPA,QAAQ;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChB;EAAA;IAAA;EAAA;AAAA,IAEF;AACD,OAAO,IAAME,qBAAqB,GAAGd,gBAAgB,CACnD,iCAAiC;EAAA,uEACjC;IAAA;IAAA;MAAA;QAAA;UAAA;YAASW,EAAE,SAAFA,EAAE;YAAA;YAAA,OAC0CT,wBAAwB,CAACS,EAAE,CAAC;UAAA;YAAzEI,UAAoC;YAAA,kCAInCA,UAAU;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAClB;EAAA;IAAA;EAAA;AAAA,IACF;AACD;AACA;AACA;AACA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIC,KAAgB;EAAA,OAAKA,KAAK,CAACX,iBAAiB,CAACA,iBAAiB;AAAA;AACtG,OAAO,IAAMY,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAID,KAAgB;EAAA,OAAKA,KAAK,CAACX,iBAAiB,CAACE,iBAAiB;AAAA;AACtG,OAAO,IAAMW,6BAA6B,GAAG,SAAhCA,6BAA6B,CAAIF,KAAgB;EAAA,OAAKA,KAAK,CAACX,iBAAiB,CAACG,uBAAuB;AAAA;AAGlH,OAAO,IAAMW,qBAAqB,GAAGnB,WAAW,CAAC;EAC/CoB,IAAI,EAAE,oBAAoB;EAC1BhB,YAAY,EAAZA,YAAY;EACZ;EACAiB,QAAQ,EAAE,CAEV,CAAC;EACD;EACA;EACAC,aAAa,EAAE,uBAACC,OAAO,EAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,sBAAsB,CAACgB,SAAS,EAAE,UAACT,KAAK,EAAEU,MAAM,EAAK;MAC5DV,KAAK,CAACX,iBAAiB,GAAGqB,MAAM,CAACC,OAAO;IAC1C,CAAC,CAAC,CACDH,OAAO,CAACZ,sBAAsB,CAACa,SAAS,EAAE,UAACT,KAAK,EAAEU,MAAM,EAAK;MAC5DV,KAAK,CAACT,iBAAiB,GAAGmB,MAAM,CAACC,OAAO;IAC1C,CAAC,CAAC,CACDH,OAAO,CAACX,qBAAqB,CAACY,SAAS,EAAE,UAACT,KAAK,EAAEU,MAAM,EAAK;MAC3DV,KAAK,CAACR,uBAAuB,GAAGkB,MAAM,CAACC,OAAO;IAChD,CAAC,CAAC;EACN;AAEF,CAAC,CAAC;AAGF,eAAeR,qBAAqB,CAACS,OAAO"},"metadata":{},"sourceType":"module"}