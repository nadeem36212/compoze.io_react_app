{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addAccount, getAccountMetaData, getAccounts, updateAccount } from './accountAPI';\nvar initialState = {\n  accounts: [],\n  isLoading: false,\n  metaData: undefined\n};\nexport var createAccount = createAsyncThunk('accounts/addAccount', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var account;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            account = _ref.account;\n            return _context.abrupt(\"return\", addAccount(account));\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var editAccount = createAsyncThunk('accounts/updateAccount', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {\n    var account;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            account = _ref3.account;\n            return _context2.abrupt(\"return\", updateAccount(account));\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var fetchAccounts = createAsyncThunk('accounts/fetchAccounts', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n  var response;\n  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return getAccounts();\n        case 2:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", response);\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n})));\nexport var fetchAccountMetaData = createAsyncThunk('accounts/fetchAccountMetaData', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref6) {\n    var productName;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            productName = _ref6.productName;\n            _context4.next = 3;\n            return getAccountMetaData(productName);\n          case 3:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return function (_x3) {\n    return _ref7.apply(this, arguments);\n  };\n}());\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport var selectAccountState = function selectAccountState(state) {\n  return state.accounts.accounts;\n};\nexport var selectAccountIsLoading = function selectAccountIsLoading(state) {\n  return state.accounts.isLoading;\n};\nexport var selectAccountMetaData = function selectAccountMetaData(state) {\n  return state.accounts.metaData;\n};\nexport var accountsSlice = createSlice({\n  name: 'accounts',\n  initialState: initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(createAccount.fulfilled, function (state, action) {\n      state.accounts.push(action.payload);\n    }).addCase(fetchAccounts.fulfilled, function (state, action) {\n      state.accounts = action.payload;\n      state.isLoading = false;\n    }).addCase(fetchAccounts.pending, function (state, action) {\n      state.isLoading = true;\n    }).addCase(fetchAccounts.rejected, function (state, action) {\n      state.accounts = [];\n      state.isLoading = false;\n    }).addCase(fetchAccountMetaData.fulfilled, function (state, action) {\n      state.metaData = action.payload;\n    });\n  }\n});\nexport default accountsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addAccount","getAccountMetaData","getAccounts","updateAccount","initialState","accounts","isLoading","metaData","undefined","createAccount","account","editAccount","fetchAccounts","response","fetchAccountMetaData","productName","selectAccountState","state","selectAccountIsLoading","selectAccountMetaData","accountsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","action","push","payload","pending","rejected","reducer"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/account/accountSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport { addAccount, getAccountMetaData, getAccounts, updateAccount } from './accountAPI';\n\nexport interface Account {\n  id: string;\n  accountId: string;\n  name: string;\n  roleArn?: string;\n  hostedZoneId?: string;\n  externalId?: string;\n  trackCost: boolean;\n  trackCompliance: boolean;\n  regions: Region[]\n}\n\nexport interface Region {\n  id: string;\n  region: string;\n\n}\n\nexport interface AccountsState {\n  accounts: Account[];\n  isLoading: boolean;\n  metaData: any;\n}\n\ninterface AddAccountThunkArgs {\n  account: Account;\n}\n\ninterface GetAccountMetaDataThunkArgs {\n  productName: string;\n}\n\ninterface AddAccountThunkArgs {\n  account: Account;\n}\n\ninterface UpdateAccountThunkArgs {\n  account: Account;\n}\n\nconst initialState: AccountsState = {\n  accounts: [],\n  isLoading: false,\n  metaData: undefined\n};\n\nexport const createAccount = createAsyncThunk(\n  'accounts/addAccount',\n  async ({ account }: AddAccountThunkArgs) => {\n    return addAccount(account);\n  }\n);\n\nexport const editAccount = createAsyncThunk(\n  'accounts/updateAccount',\n  async ({ account }: UpdateAccountThunkArgs) => {\n    return updateAccount(account);\n  }\n);\n\nexport const fetchAccounts = createAsyncThunk(\n  'accounts/fetchAccounts',\n  async () => {\n    const response = await getAccounts();\n\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\nexport const fetchAccountMetaData = createAsyncThunk(\n  'accounts/fetchAccountMetaData',\n  async ({productName}: GetAccountMetaDataThunkArgs) => {\n\n    return await getAccountMetaData(productName)\n  }\n);\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectAccountState = (state: RootState) => state.accounts.accounts;\nexport const selectAccountIsLoading = (state: RootState) => state.accounts.isLoading;\nexport const selectAccountMetaData = (state: RootState) => state.accounts.metaData;\n\nexport const accountsSlice = createSlice({\n  name: 'accounts',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(createAccount.fulfilled, (state, action) => {\n        state.accounts.push(action.payload);\n      })\n      .addCase(fetchAccounts.fulfilled, (state, action) => {\n        state.accounts = action.payload;\n        state.isLoading = false\n      })\n      .addCase(fetchAccounts.pending, (state, action) => {\n        state.isLoading = true\n      })\n      .addCase(fetchAccounts.rejected, (state, action) => {\n        state.accounts = [];\n        state.isLoading = false\n      })\n      .addCase(fetchAccountMetaData.fulfilled, (state, action) => {\n        state.metaData = action.payload;\n      });\n  },\n});\n\nexport default accountsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}