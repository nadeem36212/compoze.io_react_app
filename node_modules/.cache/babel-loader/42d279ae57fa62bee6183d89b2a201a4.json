{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getRuleDetails, triggerRuleEvaluation } from './ruleDetailsAPI';\nvar initialState = {\n  ruleDetails: undefined,\n  apiFailure: false,\n  evaluationTriggered: false\n};\nexport var fetchRuleDetails = createAsyncThunk('rules/details/fetch', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var name, accountId;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref.name, accountId = _ref.accountId;\n            _context.next = 3;\n            return getRuleDetails(name, accountId);\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var evaluateRule = createAsyncThunk('rules/details/evaluate', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {\n    var name, accountId;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            name = _ref3.name, accountId = _ref3.accountId;\n            _context2.next = 3;\n            return triggerRuleEvaluation(name, accountId);\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var selectRuleDetailsStatus = function selectRuleDetailsStatus(state) {\n  return state.rule.ruleDetails;\n};\nexport var selectAPIError = function selectAPIError(state) {\n  return state.rule.apiFailure;\n};\nexport var selectEvaluationTriggered = function selectEvaluationTriggered(state) {\n  return state.rule.evaluationTriggered;\n};\nexport var ruleDetailSlice = createSlice({\n  name: 'rules/details',\n  initialState: initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchRuleDetails.fulfilled, function (state, action) {\n      state.ruleDetails = action.payload;\n      state.apiFailure = false;\n    }).addCase(fetchRuleDetails.rejected, function (state, action) {\n      state.apiFailure = true;\n    }).addCase(evaluateRule.fulfilled, function (state, action) {\n      state.evaluationTriggered = true;\n    }).addCase(evaluateRule.rejected, function (state, action) {\n      state.apiFailure = true;\n    });\n  }\n});\nexport default ruleDetailSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getRuleDetails","triggerRuleEvaluation","initialState","ruleDetails","undefined","apiFailure","evaluationTriggered","fetchRuleDetails","name","accountId","evaluateRule","selectRuleDetailsStatus","state","rule","selectAPIError","selectEvaluationTriggered","ruleDetailSlice","reducers","extraReducers","builder","addCase","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/rule/ruleDetailsSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport { getRuleDetails, triggerRuleEvaluation } from './ruleDetailsAPI';\n\nexport interface RuleDetails {\n  resourceType: string;\n  severity: string;\n  severityDescription: string;\n  description: string;\n  mitigations: Mitigations[];\n  resources: string[];\n}\nexport interface Mitigations {\n  type: 'Cloudformation' | 'AWS SAM' | 'Terraform' | 'CLI' | 'Console';\n  description?: string\n  document?: string\n}\n\nexport interface RuleState {\n  ruleDetails: RuleDetails | undefined\n  apiFailure: boolean\n  evaluationTriggered: boolean\n}\n\ninterface GetRuleDetailsThunkArgs {\n  name: string\n  accountId: string\n}\n\nconst initialState: RuleState = {\n  ruleDetails: undefined,\n  apiFailure: false,\n  evaluationTriggered: false\n};\n\nexport const fetchRuleDetails = createAsyncThunk(\n  'rules/details/fetch',\n  async ({ name, accountId }: GetRuleDetailsThunkArgs) => {\n    return await getRuleDetails(name, accountId)\n  }\n\n);\n\nexport const evaluateRule = createAsyncThunk(\n  'rules/details/evaluate',\n  async ({ name, accountId }: GetRuleDetailsThunkArgs) => {\n    return await triggerRuleEvaluation(name, accountId)\n  }\n\n);\n\nexport const selectRuleDetailsStatus = (state: RootState) => state.rule.ruleDetails\nexport const selectAPIError = (state: RootState) => state.rule.apiFailure\nexport const selectEvaluationTriggered = (state: RootState) => state.rule.evaluationTriggered\n\nexport const ruleDetailSlice = createSlice({\n  name: 'rules/details',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchRuleDetails.fulfilled, (state, action) => {\n        state.ruleDetails = action.payload;\n        state.apiFailure = false;\n      })\n      .addCase(fetchRuleDetails.rejected, (state, action) => {\n        state.apiFailure = true;\n      })\n      .addCase(evaluateRule.fulfilled, (state, action) => {\n        state.evaluationTriggered = true;\n      })\n      .addCase(evaluateRule.rejected, (state, action) => {\n        state.apiFailure = true;\n      })\n  },\n\n});\n\n\nexport default ruleDetailSlice.reducer;\n"],"mappings":";;AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,kBAAkB;AA2BxE,IAAMC,YAAuB,GAAG;EAC9BC,WAAW,EAAEC,SAAS;EACtBC,UAAU,EAAE,KAAK;EACjBC,mBAAmB,EAAE;AACvB,CAAC;AAED,OAAO,IAAMC,gBAAgB,GAAGT,gBAAgB,CAC9C,qBAAqB;EAAA,uEACrB;IAAA;IAAA;MAAA;QAAA;UAAA;YAASU,IAAI,QAAJA,IAAI,EAAEC,SAAS,QAATA,SAAS;YAAA;YAAA,OACTT,cAAc,CAACQ,IAAI,EAAEC,SAAS,CAAC;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC7C;EAAA;IAAA;EAAA;AAAA,IAEF;AAED,OAAO,IAAMC,YAAY,GAAGZ,gBAAgB,CAC1C,wBAAwB;EAAA,uEACxB;IAAA;IAAA;MAAA;QAAA;UAAA;YAASU,IAAI,SAAJA,IAAI,EAAEC,SAAS,SAATA,SAAS;YAAA;YAAA,OACTR,qBAAqB,CAACO,IAAI,EAAEC,SAAS,CAAC;UAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACpD;EAAA;IAAA;EAAA;AAAA,IAEF;AAED,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIC,KAAgB;EAAA,OAAKA,KAAK,CAACC,IAAI,CAACV,WAAW;AAAA;AACnF,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAc,CAAIF,KAAgB;EAAA,OAAKA,KAAK,CAACC,IAAI,CAACR,UAAU;AAAA;AACzE,OAAO,IAAMU,yBAAyB,GAAG,SAA5BA,yBAAyB,CAAIH,KAAgB;EAAA,OAAKA,KAAK,CAACC,IAAI,CAACP,mBAAmB;AAAA;AAE7F,OAAO,IAAMU,eAAe,GAAGjB,WAAW,CAAC;EACzCS,IAAI,EAAE,eAAe;EACrBN,YAAY,EAAZA,YAAY;EACZ;EACAe,QAAQ,EAAE,CAEV,CAAC;EACD;EACA;EACAC,aAAa,EAAE,uBAACC,OAAO,EAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,gBAAgB,CAACc,SAAS,EAAE,UAACT,KAAK,EAAEU,MAAM,EAAK;MACtDV,KAAK,CAACT,WAAW,GAAGmB,MAAM,CAACC,OAAO;MAClCX,KAAK,CAACP,UAAU,GAAG,KAAK;IAC1B,CAAC,CAAC,CACDe,OAAO,CAACb,gBAAgB,CAACiB,QAAQ,EAAE,UAACZ,KAAK,EAAEU,MAAM,EAAK;MACrDV,KAAK,CAACP,UAAU,GAAG,IAAI;IACzB,CAAC,CAAC,CACDe,OAAO,CAACV,YAAY,CAACW,SAAS,EAAE,UAACT,KAAK,EAAEU,MAAM,EAAK;MAClDV,KAAK,CAACN,mBAAmB,GAAG,IAAI;IAClC,CAAC,CAAC,CACDc,OAAO,CAACV,YAAY,CAACc,QAAQ,EAAE,UAACZ,KAAK,EAAEU,MAAM,EAAK;MACjDV,KAAK,CAACP,UAAU,GAAG,IAAI;IACzB,CAAC,CAAC;EACN;AAEF,CAAC,CAAC;AAGF,eAAeW,eAAe,CAACS,OAAO"},"metadata":{},"sourceType":"module"}