{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sha256 = void 0;\nvar ie11Sha256_1 = require(\"./ie11Sha256\");\nvar webCryptoSha256_1 = require(\"./webCryptoSha256\");\nvar sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nvar supports_web_crypto_1 = require(\"@aws-crypto/supports-web-crypto\");\nvar ie11_detection_1 = require(\"@aws-crypto/ie11-detection\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */function () {\n  function Sha256(secret) {\n    if ((0, supports_web_crypto_1.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {\n      this.hash = new webCryptoSha256_1.Sha256(secret);\n    } else if ((0, ie11_detection_1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {\n      this.hash = new ie11Sha256_1.Sha256(secret);\n    } else {\n      this.hash = new sha256_js_1.Sha256(secret);\n    }\n  }\n  Sha256.prototype.update = function (data, encoding) {\n    this.hash.update(data, encoding);\n  };\n  Sha256.prototype.digest = function () {\n    return this.hash.digest();\n  };\n  return Sha256;\n}();\nexports.Sha256 = Sha256;","map":{"version":3,"sources":["../src/crossPlatformSha256.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAEA,IAAA,qBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;AAEA,IAAA,MAAA,GAAA,aAAA,YAAA;EAGE,SAAA,MAAA,CAAY,MAAmB,EAAA;IAC7B,IAAI,CAAA,CAAA,EAAA,qBAAA,CAAA,iBAAiB,EAAC,CAAA,CAAA,EAAA,oBAAA,CAAA,YAAY,GAAE,CAAC,EAAE;MACrC,IAAI,CAAC,IAAI,GAAG,IAAI,iBAAA,CAAA,MAAe,CAAC,MAAM,CAAC;KACxC,MAAM,IAAI,CAAA,CAAA,EAAA,gBAAA,CAAA,UAAU,EAAC,CAAA,CAAA,EAAA,oBAAA,CAAA,YAAY,GAAE,CAAC,EAAE;MACrC,IAAI,CAAC,IAAI,GAAG,IAAI,YAAA,CAAA,MAAU,CAAC,MAAM,CAAC;KACnC,MAAM;MACL,IAAI,CAAC,IAAI,GAAG,IAAI,WAAA,CAAA,MAAQ,CAAC,MAAM,CAAC;IACjC;EACH;EAEA,MAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,IAAgB,EAAE,QAAsC,EAAA;IAC7D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC;EAClC,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IACE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;EAC3B,CAAC;EACH,OAAA,MAAC;AAAD,CAAC,EAAA;AApBY,OAAA,CAAA,MAAA,GAAA,MAAA","sourcesContent":["import { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nimport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { isMsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly hash: Hash;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else if (isMsWindow(locateWindow())) {\n      this.hash = new Ie11Sha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(data, encoding);\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}