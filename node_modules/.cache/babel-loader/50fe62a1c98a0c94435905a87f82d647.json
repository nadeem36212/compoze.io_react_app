{"ast":null,"code":"import { __values } from \"tslib\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\nexport function buildQueryString(query) {\n  var e_1, _a;\n  var parts = [];\n  try {\n    for (var _b = __values(Object.keys(query).sort()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      var value = query[key];\n      key = escapeUri(key);\n      if (Array.isArray(value)) {\n        for (var i = 0, iLen = value.length; i < iLen; i++) {\n          parts.push(key + \"=\" + escapeUri(value[i]));\n        }\n      } else {\n        var qsEntry = key;\n        if (value || typeof value === \"string\") {\n          qsEntry += \"=\" + escapeUri(value);\n        }\n        parts.push(qsEntry);\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return parts.join(\"&\");\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";AACA,SAAS,SAAS,QAAQ,0BAA0B;AAEpD,OAAM,SAAU,gBAAgB,CAAC,KAAwB,EAAA;;EACvD,IAAM,KAAK,GAAa,EAAE;;IAC1B,KAAgB,IAAA,EAAA,GAAA,QAAA,CAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAE;MAAtC,IAAI,GAAG,GAAA,EAAA,CAAA,KAAA;MACV,IAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;MACxB,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;MACpB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;UAClD,KAAK,CAAC,IAAI,CAAI,GAAG,GAAA,GAAA,GAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAG,CAAC;QAC5C;OACF,MAAM;QACL,IAAI,OAAO,GAAG,GAAG;QACjB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;UACtC,OAAO,IAAI,GAAA,GAAI,SAAS,CAAC,KAAK,CAAG;QAClC;QACD,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;MACpB;IACF;;;;;;;;;;;;EAED,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AACxB","sourcesContent":["import { QueryParameterBag } from \"@aws-sdk/types\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n\nexport function buildQueryString(query: QueryParameterBag): string {\n  const parts: string[] = [];\n  for (let key of Object.keys(query).sort()) {\n    const value = query[key];\n    key = escapeUri(key);\n    if (Array.isArray(value)) {\n      for (let i = 0, iLen = value.length; i < iLen; i++) {\n        parts.push(`${key}=${escapeUri(value[i])}`);\n      }\n    } else {\n      let qsEntry = key;\n      if (value || typeof value === \"string\") {\n        qsEntry += `=${escapeUri(value)}`;\n      }\n      parts.push(qsEntry);\n    }\n  }\n\n  return parts.join(\"&\");\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}