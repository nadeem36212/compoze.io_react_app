{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/naeem/syntaxroot/compoze.io_react_app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mean;\nfunction mean(values, valueof) {\n  var count = 0;\n  var sum = 0;\n  if (valueof === undefined) {\n    var _iterator = _createForOfIteratorHelper(values),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        if (value != null && (value = +value) >= value) {\n          ++count, sum += value;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var index = -1;\n    var _iterator2 = _createForOfIteratorHelper(values),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        if ((_value = valueof(_value, ++index, values)) != null && (_value = +_value) >= _value) {\n          ++count, sum += _value;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  if (count) return sum / count;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","mean","values","valueof","count","sum","undefined","index"],"sources":["/Users/naeem/syntaxroot/compoze.io_react_app/node_modules/victory-vendor/lib-vendor/d3-array/src/mean.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mean;\n\nfunction mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n\n  if (count) return sum / count;\n}"],"mappings":"AAAA,YAAY;;AAAC;AAEbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,IAAI;AAEtB,SAASA,IAAI,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC7B,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,CAAC;EAEX,IAAIF,OAAO,KAAKG,SAAS,EAAE;IAAA,2CACPJ,MAAM;MAAA;IAAA;MAAxB,oDAA0B;QAAA,IAAjBH,KAAK;QACZ,IAAIA,KAAK,IAAI,IAAI,IAAI,CAACA,KAAK,GAAG,CAACA,KAAK,KAAKA,KAAK,EAAE;UAC9C,EAAEK,KAAK,EAAEC,GAAG,IAAIN,KAAK;QACvB;MACF;IAAC;MAAA;IAAA;MAAA;IAAA;EACH,CAAC,MAAM;IACL,IAAIQ,KAAK,GAAG,CAAC,CAAC;IAAC,4CAEGL,MAAM;MAAA;IAAA;MAAxB,uDAA0B;QAAA,IAAjBH,MAAK;QACZ,IAAI,CAACA,MAAK,GAAGI,OAAO,CAACJ,MAAK,EAAE,EAAEQ,KAAK,EAAEL,MAAM,CAAC,KAAK,IAAI,IAAI,CAACH,MAAK,GAAG,CAACA,MAAK,KAAKA,MAAK,EAAE;UAClF,EAAEK,KAAK,EAAEC,GAAG,IAAIN,MAAK;QACvB;MACF;IAAC;MAAA;IAAA;MAAA;IAAA;EACH;EAEA,IAAIK,KAAK,EAAE,OAAOC,GAAG,GAAGD,KAAK;AAC/B"},"metadata":{},"sourceType":"script"}