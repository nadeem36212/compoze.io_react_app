{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\nexport var omitRetryHeadersMiddleware = function omitRetryHeadersMiddleware() {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n          if (HttpRequest.isInstance(request)) {\n            delete request.headers[INVOCATION_ID_HEADER];\n            delete request.headers[REQUEST_HEADER];\n          }\n          return [2 /*return*/, next(args)];\n        });\n      });\n    };\n  };\n};\nexport var omitRetryHeadersMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true\n};\nexport var getOmitRetryHeadersPlugin = function getOmitRetryHeadersPlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["../../src/omitRetryHeadersMiddleware.ts"],"names":[],"mappings":";AAAA,SAAS,WAAW,QAAQ,wBAAwB;AAUpD,SAAS,oBAAoB,EAAE,cAAc,QAAQ,aAAa;AAElE,OAAO,IAAM,0BAA0B,GAAG,SAA7B,0BAA0B,GAAG;EAAM,OAAA,UAC9C,IAAkC,EAAA;IACD,OAAA,UACjC,IAAmC,EAAA;MAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;UAE3B,OAAO,GAAK,IAAI,CAAA,OAAT;UACf,IAAI,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YACnC,OAAO,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC;YAC5C,OAAO,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC;UACvC;UACD,OAAA,CAAA,CAAA,CAAA,YAAO,IAAI,CAAC,IAAI,CAAC,CAAA;;;KAClB;EATkC,CASlC;AAX+C,CAW/C;AAED,OAAO,IAAM,iCAAiC,GAA8B;EAC1E,IAAI,EAAE,4BAA4B;EAClC,IAAI,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,oBAAoB,CAAC;EAChD,QAAQ,EAAE,QAAQ;EAClB,YAAY,EAAE,mBAAmB;EACjC,QAAQ,EAAE;CACX;AAED,OAAO,IAAM,yBAAyB,GAAG,SAA5B,yBAAyB,CAAI,OAAgB,EAAA;EAA0B,OAAC;IACnF,YAAY,EAAE,sBAAC,WAAW,EAAA;MACxB,WAAW,CAAC,aAAa,CAAC,0BAA0B,EAAE,EAAE,iCAAiC,CAAC;IAC5F;GACD;AAJmF,CAIlF","sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n  RelativeMiddlewareOptions,\n} from \"@aws-sdk/types\";\n\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\n\nexport const omitRetryHeadersMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  const { request } = args;\n  if (HttpRequest.isInstance(request)) {\n    delete request.headers[INVOCATION_ID_HEADER];\n    delete request.headers[REQUEST_HEADER];\n  }\n  return next(args);\n};\n\nexport const omitRetryHeadersMiddlewareOptions: RelativeMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true,\n};\n\nexport const getOmitRetryHeadersPlugin = (options: unknown): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}