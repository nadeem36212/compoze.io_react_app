{"ast":null,"code":"import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport var deserializerMiddlewareOption = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true\n};\nexport var serializerMiddlewareOption = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n  return {\n    applyToStack: function applyToStack(commandStack) {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    }\n  };\n}","map":{"version":3,"sources":["../../src/serdePlugin.ts"],"names":[],"mappings":"AAWA,SAAS,sBAAsB,QAAQ,0BAA0B;AACjE,SAAS,oBAAoB,QAAQ,wBAAwB;AAE7D,OAAO,IAAM,4BAA4B,GAA8B;EACrE,IAAI,EAAE,wBAAwB;EAC9B,IAAI,EAAE,aAAa;EACnB,IAAI,EAAE,CAAC,cAAc,CAAC;EACtB,QAAQ,EAAE;CACX;AAED,OAAO,IAAM,0BAA0B,GAA4B;EACjE,IAAI,EAAE,sBAAsB;EAC5B,IAAI,EAAE,WAAW;EACjB,IAAI,EAAE,CAAC,YAAY,CAAC;EACpB,QAAQ,EAAE;CACX;AAED,OAAM,SAAU,cAAc,CAK5B,MAAoB,EACpB,UAAgD,EAChD,YAAiE,EAAA;EAEjE,OAAO;IACL,YAAY,EAAE,sBAAC,YAAoD,EAAA;MACjE,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE,4BAA4B,CAAC;MAC5F,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,0BAA0B,CAAC;IACxF;GACD;AACH","sourcesContent":["import {\n  DeserializeHandlerOptions,\n  EndpointBearer,\n  MetadataBearer,\n  MiddlewareStack,\n  Pluggable,\n  RequestSerializer,\n  ResponseDeserializer,\n  SerializeHandlerOptions,\n} from \"@aws-sdk/types\";\n\nimport { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\n\nexport const deserializerMiddlewareOption: DeserializeHandlerOptions = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true,\n};\n\nexport const serializerMiddlewareOption: SerializeHandlerOptions = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true,\n};\n\nexport function getSerdePlugin<\n  InputType extends object,\n  SerDeContext extends EndpointBearer,\n  OutputType extends MetadataBearer\n>(\n  config: SerDeContext,\n  serializer: RequestSerializer<any, SerDeContext>,\n  deserializer: ResponseDeserializer<OutputType, any, SerDeContext>\n): Pluggable<InputType, OutputType> {\n  return {\n    applyToStack: (commandStack: MiddlewareStack<InputType, OutputType>) => {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    },\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}