{"ast":null,"code":"import _slicedToArray from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/templates/EC2TemplateCreatePage.tsx\",\n  _s = $RefreshSig$();\nimport { Heading, Switch, Divider, HStack, Flex, Box, Stack, FormControl, FormLabel, Button } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { Card } from \"../../components/Card\";\nimport FreeFormSelect from \"../../components/form/FreeFormSelect\";\nimport { selectAccountMetaData } from \"../account/accountSlice\";\nimport SelectAMIName from \"../component/create/selections/AMISelection\";\nimport PortSelection from \"../component/create/selections/PortSelection\";\nimport SelectionForm from \"../component/create/selections/SelectionForm\";\nimport SubnetSelection from \"../component/create/selections/SubnetSelection\";\nimport VolumeSelectionSize from \"../component/create/selections/VolumeSizeSelection\";\nimport VPCSelection from \"../component/create/selections/VPCSelection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EC2TemplateCreatePage(_ref) {\n  _s();\n  var finishForm = _ref.finishForm;\n  var params = useParams();\n  var meta = useAppSelector(selectAccountMetaData);\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    vpc = _useState2[0],\n    setVPC = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    defaultVPC = _useState4[0],\n    setDefaultVPC = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    defaultSubnet = _useState6[0],\n    setDefaultSubnet = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    defaultPorts = _useState8[0],\n    setDefaultPorts = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    defaultAmi = _useState10[0],\n    setDefaultAmi = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    defaultVolumeSize = _useState12[0],\n    setDefaultVolumeSize = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    defaultInstanceType = _useState14[0],\n    setDefaultInstanceType = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    defaultKeyName = _useState16[0],\n    setDefaultKeyName = _useState16[1];\n  var _useState17 = useState(),\n    _useState18 = _slicedToArray(_useState17, 2),\n    subnet = _useState18[0],\n    setSubnet = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedVpcSubents = _useState20[0],\n    setSelectedVpcSubents = _useState20[1];\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    ports = _useState22[0],\n    _setPorts = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    ami = _useState24[0],\n    setAmi = _useState24[1];\n  var _useState25 = useState(),\n    _useState26 = _slicedToArray(_useState25, 2),\n    key = _useState26[0],\n    setKey = _useState26[1];\n  var _useState27 = useState(),\n    _useState28 = _slicedToArray(_useState27, 2),\n    volumeSize = _useState28[0],\n    setVolumeSize = _useState28[1];\n  var _useState29 = useState(),\n    _useState30 = _slicedToArray(_useState29, 2),\n    name = _useState30[0],\n    setName = _useState30[1];\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    instanceTypeIdentifier = _useState32[0],\n    setInstanceTypeIdentifier = _useState32[1];\n  var vpcOptions = meta ? meta.vpcs.map(function (vpc) {\n    return {\n      value: vpc.vpcId,\n      displayName: vpc.vpcName\n    };\n  }) : [];\n  var subnetOptions = selectedVpcSubents ? selectedVpcSubents.map(function (subnet) {\n    return {\n      value: subnet.subnetId,\n      displayName: subnet.subnetName\n    };\n  }) : [];\n  var amiOptions = meta ? meta.amis.map(function (ami) {\n    return {\n      value: ami.amiId,\n      displayName: ami.name\n    };\n  }) : [];\n  var instanceTypeOptions = meta ? meta.instanceTypes.map(function (instanceType) {\n    return {\n      value: instanceType.instanceType,\n      displayName: instanceType.instanceType\n    };\n  }) : [];\n  var keyOptions = meta ? meta.keyNames.map(function (key) {\n    return {\n      value: key.keyName,\n      displayName: key.keyName\n    };\n  }) : [];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    px: \"20px\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"xl\",\n        mb: 8,\n        textAlign: \"center\",\n        children: \"Ec2 Template Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        textColor: \"gray.700\",\n        size: \"lg\",\n        textAlign: 'center',\n        children: \"Select which fields you'd like to provide default values for when creating a new EC2 instance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        marginBottom: '5px',\n        marginTop: '15px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 15,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              py: 4,\n              children: /*#__PURE__*/_jsxDEV(Flex, {\n                py: 10,\n                children: /*#__PURE__*/_jsxDEV(FreeFormSelect, {\n                  label: \"Template Name\",\n                  helperText: \"Provide a name for your template\",\n                  placeHolder: \"Name\",\n                  onChange: function onChange(e) {\n                    setName(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default VPC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultVPC(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), defaultVPC && /*#__PURE__*/_jsxDEV(VPCSelection, {\n              vpcOptions: vpcOptions,\n              onChange: function onChange(event) {\n                var selectedOption = vpcOptions.find(function (option) {\n                  return option.displayName === event.target.value;\n                });\n                var subnets = meta.vpcs.find(function (vpc) {\n                  return vpc.vpcId === selectedOption.value;\n                }).subnets;\n                setVPC(selectedOption.value);\n                setSelectedVpcSubents(subnets);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default Subnet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultSubnet(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), defaultSubnet && /*#__PURE__*/_jsxDEV(SubnetSelection, {\n              subnetOptions: subnetOptions,\n              onChange: function onChange(event) {\n                var selectedOption = subnetOptions.find(function (option) {\n                  return option.displayName === event.target.value;\n                });\n                //find subnet from selectedVpcSubents\n                var subnet = selectedVpcSubents.find(function (subnet) {\n                  return subnet.subnetId === selectedOption.value;\n                });\n                setSubnet(subnet);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default Ports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultPorts(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), defaultPorts && /*#__PURE__*/_jsxDEV(PortSelection, {\n              setPorts: function setPorts(portsString) {\n                _setPorts(portsString);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default AMI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultAmi(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), defaultAmi && /*#__PURE__*/_jsxDEV(SelectAMIName, {\n              amiOptions: amiOptions,\n              onChange: function onChange(event) {\n                var selectedOption = amiOptions.find(function (option) {\n                  return option.displayName === event.target.value;\n                });\n                setAmi(selectedOption);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default Volume Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultVolumeSize(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), defaultVolumeSize && /*#__PURE__*/_jsxDEV(VolumeSelectionSize, {\n              onChange: setVolumeSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default Instance Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultInstanceType(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), defaultInstanceType && /*#__PURE__*/_jsxDEV(SelectionForm, {\n              label: \"Which instance type would you like to use?\",\n              placeHolder: \"Instance Type\",\n              options: instanceTypeOptions,\n              helperText: \"Confirm pricing for your instance type to ensure you do not exceed your budget\",\n              onChange: function onChange(event) {\n                var selectedOption = instanceTypeOptions.find(function (option) {\n                  return option.displayName === event.target.value;\n                });\n                setInstanceTypeIdentifier(selectedOption);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 31,\n            w: \"100%\",\n            h: 100,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              display: \"flex\",\n              alignItems: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                fontSize: '2xl',\n                htmlFor: \"default-vpc\",\n                mb: \"0\",\n                children: \"Default Key Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: function onChange(e) {\n                  return setDefaultKeyName(e.target.checked);\n                },\n                size: 'lg',\n                id: \"default-vpc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), defaultKeyName && /*#__PURE__*/_jsxDEV(SelectionForm, {\n              label: \"Which key name would you like to use?\",\n              placeHolder: \"EC2 Key name\",\n              options: keyOptions,\n              helperText: \"This is the key you will use to ssh into your instance\",\n              onChange: function onChange(event) {\n                var selectedOption = keyOptions.find(function (option) {\n                  return option.displayName === event.target.value;\n                });\n                setKey(selectedOption);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"lg\",\n          onClick: function onClick() {\n            finishForm(params.name, name, \"EC2\", {\n              ami: ami === null || ami === void 0 ? void 0 : ami.value,\n              numberOfInstances: 1,\n              keyName: key === null || key === void 0 ? void 0 : key.value,\n              subnetId: subnet === null || subnet === void 0 ? void 0 : subnet.subnetId,\n              vpcId: vpc,\n              singleDeployment: true,\n              availabilityZone: subnet === null || subnet === void 0 ? void 0 : subnet.availabilityZone,\n              ports: ports,\n              volumeSize: volumeSize,\n              instanceTypeIdentifier: instanceTypeIdentifier === null || instanceTypeIdentifier === void 0 ? void 0 : instanceTypeIdentifier.value\n            });\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n// dispatch(createTemplate({\n//     productName: params.name,\n//     name: name!,\n//     technology: componentType!,\n//     attributes: {\n//         ami: ami?.value,\n//         numberOfInstances: 1,\n//         keyName: key?.value,\n//         subnetId: subnet?.subnetId,\n//         vpcId: vpc,\n//         singleDeployment: true,\n//         availabilityZone: subnet?.availabilityZone,\n//         ports: ports,\n//         volumeSize,\n//         instanceTypeIdentifier: instanceTypeIdentifier?.value\n\n//     }\n\n// }))\n_s(EC2TemplateCreatePage, \"MteL40Ed+vgw8YyHj9E9/CD5CQ4=\", false, function () {\n  return [useParams, useAppSelector];\n});\n_c = EC2TemplateCreatePage;\nvar _c;\n$RefreshReg$(_c, \"EC2TemplateCreatePage\");","map":{"version":3,"names":["Heading","Switch","Divider","HStack","Flex","Box","Stack","FormControl","FormLabel","Button","useState","useParams","useAppSelector","Card","FreeFormSelect","selectAccountMetaData","SelectAMIName","PortSelection","SelectionForm","SubnetSelection","VolumeSelectionSize","VPCSelection","EC2TemplateCreatePage","finishForm","params","meta","undefined","vpc","setVPC","defaultVPC","setDefaultVPC","defaultSubnet","setDefaultSubnet","defaultPorts","setDefaultPorts","defaultAmi","setDefaultAmi","defaultVolumeSize","setDefaultVolumeSize","defaultInstanceType","setDefaultInstanceType","defaultKeyName","setDefaultKeyName","subnet","setSubnet","selectedVpcSubents","setSelectedVpcSubents","ports","setPorts","ami","setAmi","key","setKey","volumeSize","setVolumeSize","name","setName","instanceTypeIdentifier","setInstanceTypeIdentifier","vpcOptions","vpcs","map","value","vpcId","displayName","vpcName","subnetOptions","subnetId","subnetName","amiOptions","amis","amiId","instanceTypeOptions","instanceTypes","instanceType","keyOptions","keyNames","keyName","e","target","checked","event","selectedOption","find","option","subnets","portsString","numberOfInstances","singleDeployment","availabilityZone"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/templates/EC2TemplateCreatePage.tsx"],"sourcesContent":["import { Heading, Switch, Divider, HStack, Flex, Box, Stack, FormControl, FormLabel, Button } from \"@chakra-ui/react\"\nimport { useState } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\"\nimport { Card } from \"../../components/Card\"\nimport { CompozeFormOption } from \"../../components/form/CompozeFormOption\"\nimport FreeFormSelect from \"../../components/form/FreeFormSelect\"\nimport { selectAccountMetaData } from \"../account/accountSlice\"\nimport { Subnet } from \"../component/create/ec2/EC2ComponentCreation\"\nimport SelectAMIName from \"../component/create/selections/AMISelection\"\nimport PortSelection from \"../component/create/selections/PortSelection\"\nimport SelectionForm from \"../component/create/selections/SelectionForm\"\nimport SubnetSelection from \"../component/create/selections/SubnetSelection\"\nimport VolumeSelectionSize from \"../component/create/selections/VolumeSizeSelection\"\nimport VPCSelection from \"../component/create/selections/VPCSelection\"\nimport { selectTemplates, Template } from \"./templateSlice\"\n\ninterface EC2FromTemplateCreationPageProps {\n    finishForm: (productName: string, name: string, technology: string, attributes: any) => void\n}\nexport function EC2TemplateCreatePage({ finishForm }: EC2FromTemplateCreationPageProps) {\n    const params = useParams<{ name: string }>();\n\n    const meta = useAppSelector(selectAccountMetaData);\n    const [vpc, setVPC] = useState<string | undefined>(undefined)\n    const [defaultVPC, setDefaultVPC] = useState<boolean>(false)\n    const [defaultSubnet, setDefaultSubnet] = useState<boolean>(false)\n    const [defaultPorts, setDefaultPorts] = useState<boolean>(false)\n    const [defaultAmi, setDefaultAmi] = useState<boolean>(false)\n    const [defaultVolumeSize, setDefaultVolumeSize] = useState<boolean>(false)\n    const [defaultInstanceType, setDefaultInstanceType] = useState<boolean>(false)\n    const [defaultKeyName, setDefaultKeyName] = useState<boolean>(false)\n    const [subnet, setSubnet] = useState<Subnet>()\n    const [selectedVpcSubents, setSelectedVpcSubents] = useState<Subnet[]>([])\n    const [ports, setPorts] = useState<string>()\n    const [ami, setAmi] = useState<CompozeFormOption>()\n    const [key, setKey] = useState<CompozeFormOption>()\n    const [volumeSize, setVolumeSize] = useState<string>()\n    const [name, setName] = useState<string>()\n    const [instanceTypeIdentifier, setInstanceTypeIdentifier] = useState<CompozeFormOption>()\n\n\n    const vpcOptions: CompozeFormOption[] = meta ? meta.vpcs.map((vpc: any) => { return { value: vpc.vpcId, displayName: vpc.vpcName } }) : []\n    const subnetOptions: CompozeFormOption[] = selectedVpcSubents ? selectedVpcSubents.map(subnet => { return { value: subnet.subnetId, displayName: subnet.subnetName } }) : []\n    const amiOptions: CompozeFormOption[] = meta ? meta.amis.map((ami: any) => { return { value: ami.amiId, displayName: ami.name } }) : []\n    const instanceTypeOptions: CompozeFormOption[] = meta ? meta.instanceTypes.map((instanceType: any) => { return { value: instanceType.instanceType, displayName: instanceType.instanceType } }) : []\n    const keyOptions: CompozeFormOption[] = meta ? meta.keyNames.map((key: any) => { return { value: key.keyName, displayName: key.keyName } }) : []\n\n\n    return (\n        <Box px='20px'>\n            <Box>\n                <Heading as='h1' size='xl' mb={8} textAlign='center'>\n                    Ec2 Template Details\n                </Heading>\n                <Heading as='h2' textColor='gray.700' size='lg' textAlign={'center'}  >\n                    Select which fields you'd like to provide default values for when creating a new EC2 instance\n                </Heading>\n                <Divider marginBottom={'5px'} marginTop={'15px'} />\n                <Stack spacing={15}>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n\n                            <Flex py={4}>\n                                <Flex py={10}>\n                                    <FreeFormSelect\n                                        label='Template Name'\n                                        helperText='Provide a name for your template'\n                                        placeHolder='Name'\n                                        onChange={(e: any) => {\n                                            setName(e.target.value)\n                                        }}\n                                    />\n                                </Flex>\n                            </Flex>\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default VPC\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultVPC(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultVPC &&\n                                <VPCSelection vpcOptions={vpcOptions} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                    const selectedOption = vpcOptions.find(option => option.displayName === event.target.value)!\n                                    const subnets = meta.vpcs.find((vpc: any) => vpc.vpcId === selectedOption.value)!.subnets\n                                    setVPC(selectedOption.value)\n                                    setSelectedVpcSubents(subnets)\n\n                                }} />\n                            }\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default Subnet\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultSubnet(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultSubnet &&\n                                <SubnetSelection subnetOptions={subnetOptions} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                    const selectedOption = subnetOptions.find(option => option.displayName === event.target.value)!\n                                    //find subnet from selectedVpcSubents\n                                    const subnet = selectedVpcSubents.find((subnet: any) => subnet.subnetId === selectedOption.value)!\n                                    setSubnet(subnet)\n                                }} />\n                            }\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default Ports\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultPorts(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultPorts &&\n                                <PortSelection setPorts={(portsString) => { setPorts(portsString) }} />\n                            }\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default AMI\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultAmi(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultAmi &&\n                                <SelectAMIName amiOptions={amiOptions} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                    const selectedOption = amiOptions.find(option => option.displayName === event.target.value)!\n                                    setAmi(selectedOption)\n                                }} />\n                            }\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default Volume Size\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultVolumeSize(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultVolumeSize &&\n                                <VolumeSelectionSize onChange={setVolumeSize} />\n                            }\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default Instance Type\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultInstanceType(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultInstanceType &&\n                                <SelectionForm label=\"Which instance type would you like to use?\"\n                                    placeHolder=\"Instance Type\"\n                                    options={instanceTypeOptions}\n                                    helperText=\"Confirm pricing for your instance type to ensure you do not exceed your budget\"\n                                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                        const selectedOption = instanceTypeOptions.find(option => option.displayName === event.target.value)!\n                                        setInstanceTypeIdentifier(selectedOption)\n                                    }} />\n                            }\n                        </HStack>\n                    </Card>\n                    <Card>\n                        <HStack spacing={31} w='100%' h={100}>\n                            <FormControl display='flex' alignItems='left' >\n                                <FormLabel fontSize={'2xl'} htmlFor='default-vpc' mb='0'>\n                                    Default Key Name\n                                </FormLabel>\n                                <Switch onChange={(e) => setDefaultKeyName(e.target.checked)} size={'lg'} id='default-vpc' />\n                            </FormControl>\n                            {defaultKeyName &&\n                                <SelectionForm label=\"Which key name would you like to use?\"\n                                    placeHolder=\"EC2 Key name\"\n                                    options={keyOptions}\n                                    helperText=\"This is the key you will use to ssh into your instance\"\n                                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                        const selectedOption = keyOptions.find(option => option.displayName === event.target.value)!\n                                        setKey(selectedOption)\n                                    }} />\n                            }\n\n                        </HStack>\n                    </Card>\n                    <Button size=\"lg\" onClick={() => {\n                        finishForm(params.name, name!, \"EC2\", {\n                            ami: ami?.value,\n                            numberOfInstances: 1,\n                            keyName: key?.value,\n                            subnetId: subnet?.subnetId,\n                            vpcId: vpc,\n                            singleDeployment: true,\n                            availabilityZone: subnet?.availabilityZone,\n                            ports: ports,\n                            volumeSize,\n                            instanceTypeIdentifier: instanceTypeIdentifier?.value\n\n\n                        })\n                    }}>\n                        Create\n                    </Button>\n                </Stack>\n            </Box>\n\n        </Box>\n    )\n\n}\n\n// dispatch(createTemplate({\n//     productName: params.name,\n//     name: name!,\n//     technology: componentType!,\n//     attributes: {\n//         ami: ami?.value,\n//         numberOfInstances: 1,\n//         keyName: key?.value,\n//         subnetId: subnet?.subnetId,\n//         vpcId: vpc,\n//         singleDeployment: true,\n//         availabilityZone: subnet?.availabilityZone,\n//         ports: ports,\n//         volumeSize,\n//         instanceTypeIdentifier: instanceTypeIdentifier?.value\n\n\n//     }\n\n// }))"],"mappings":"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"},"metadata":{},"sourceType":"module"}