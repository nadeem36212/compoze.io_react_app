{"ast":null,"code":"export function iso8601(time) {\n  return toDate(time).toISOString().replace(/\\.\\d{3}Z$/, \"Z\");\n}\nexport function toDate(time) {\n  if (typeof time === \"number\") {\n    return new Date(time * 1000);\n  }\n  if (typeof time === \"string\") {\n    if (Number(time)) {\n      return new Date(Number(time) * 1000);\n    }\n    return new Date(time);\n  }\n  return time;\n}","map":{"version":3,"sources":["../../src/utilDate.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,OAAO,CAAC,IAA4B,EAAA;EAClD,OAAO,MAAM,CAAC,IAAI,CAAC,CAChB,WAAW,EAAE,CACb,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC;AAC9B;AAEA,OAAM,SAAU,MAAM,CAAC,IAA4B,EAAA;EACjD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EAC7B;EAED,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;MAChB,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;IACrC;IACD,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC;EACtB;EAED,OAAO,IAAI;AACb","sourcesContent":["export function iso8601(time: number | string | Date): string {\n  return toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\n}\n\nexport function toDate(time: number | string | Date): Date {\n  if (typeof time === \"number\") {\n    return new Date(time * 1000);\n  }\n\n  if (typeof time === \"string\") {\n    if (Number(time)) {\n      return new Date(Number(time) * 1000);\n    }\n    return new Date(time);\n  }\n\n  return time;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}