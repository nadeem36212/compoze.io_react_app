{"ast":null,"code":"var _jsxFileName = \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/products/create/SelectRegion.tsx\";\nimport { Flex } from \"@chakra-ui/react\";\nimport FormOption from \"../../../components/form/FormSelectOption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectRegion(props) {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    py: 4,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      py: 10,\n      children: /*#__PURE__*/_jsxDEV(FormOption, {\n        label: \"Which region would you like to use?\",\n        placeHolder: \"Region\",\n        helperText: \"Note: If you do not see the region you are looking for you can initialize a new region, for this account, via the account.region.init CLI command\",\n        options: props.regionOptions,\n        onChange: props.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = SelectRegion;\nvar _c;\n$RefreshReg$(_c, \"SelectRegion\");","map":{"version":3,"names":["Flex","FormOption","SelectRegion","props","regionOptions","onChange"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/products/create/SelectRegion.tsx"],"sourcesContent":["import { Flex } from \"@chakra-ui/react\";\nimport { CompozeFormOption } from \"../../../components/form/CompozeFormOption\";\nimport FormOption from \"../../../components/form/FormSelectOption\";\n\ninterface RegionOptions {\n    regionOptions: CompozeFormOption[];\n    onChange: (event: any) => void;\n}\nexport default function SelectRegion(props: RegionOptions): JSX.Element {\n    return (\n        <Flex py={4}>\n            <Flex py={10}>\n                <FormOption\n                    label='Which region would you like to use?'\n                    placeHolder='Region'\n                    helperText='Note: If you do not see the region you are looking for you can initialize a new region, for this account, via the account.region.init CLI command'\n                    options={props.regionOptions}\n                    onChange={props.onChange}\n                />\n            </Flex>\n        </Flex>\n    )\n\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,UAAU,MAAM,2CAA2C;AAAC;AAMnE,eAAe,SAASC,YAAY,CAACC,KAAoB,EAAe;EACpE,oBACI,QAAC,IAAI;IAAC,EAAE,EAAE,CAAE;IAAA,uBACR,QAAC,IAAI;MAAC,EAAE,EAAE,EAAG;MAAA,uBACT,QAAC,UAAU;QACP,KAAK,EAAC,qCAAqC;QAC3C,WAAW,EAAC,QAAQ;QACpB,UAAU,EAAC,mJAAmJ;QAC9J,OAAO,EAAEA,KAAK,CAACC,aAAc;QAC7B,QAAQ,EAAED,KAAK,CAACE;MAAS;QAAA;QAAA;QAAA;MAAA;IAC3B;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACJ;AAGf;AAAC,KAfuBH,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}