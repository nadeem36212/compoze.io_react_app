{"ast":null,"code":"import _regeneratorRuntime from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/naeem/syntaxroot/costdashboard-fe-redesign/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addUser, getOrganization } from './organizationApi';\nvar initialState = {\n  organization: undefined\n};\nexport var createUser = createAsyncThunk('organization/addUser', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var orgId, userName;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            orgId = _ref.orgId, userName = _ref.userName;\n            return _context.abrupt(\"return\", addUser(orgId, userName));\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var fetchOrganization = createAsyncThunk('organization/fetchOrganization', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n  var response;\n  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          response = getOrganization(); // The value we return becomes the `fulfilled` action payload\n          return _context2.abrupt(\"return\", response);\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n})));\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport var selectOrgState = function selectOrgState(state) {\n  return state.organization.organization;\n};\nexport var organizationSlice = createSlice({\n  name: 'organization',\n  initialState: initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(createUser.fulfilled, function (state, action) {\n      state.organization = action.payload;\n    }).addCase(fetchOrganization.fulfilled, function (state, action) {\n      state.organization = action.payload;\n    });\n    // .addCase(fetchAccounts.rejected, (state, action) => {\n    //   state.accounts = []\n    // })\n  }\n});\n\nexport default organizationSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addUser","getOrganization","initialState","organization","undefined","createUser","orgId","userName","fetchOrganization","response","selectOrgState","state","organizationSlice","name","reducers","extraReducers","builder","addCase","fulfilled","action","payload","reducer"],"sources":["/Users/naeem/syntaxroot/costdashboard-fe-redesign/src/features/organization/organizationSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport OrganizationPage from './Organization';\nimport { addUser, getOrganization } from './organizationApi';\n\ninterface CompozeUser {\n  id: string\n  userName: string\n}\n\ninterface AddUserThunkArgs {\n  orgId: string\n  userName: string\n}\nexport interface Organization {\n  orgId: string;\n  users: CompozeUser[]\n}\nexport interface OrganizationState {\n  organization: Organization | undefined\n}\n\nconst initialState: OrganizationState = {\n  organization: undefined\n};\n\n\nexport const createUser = createAsyncThunk(\n  'organization/addUser',\n  async ({ orgId, userName }: AddUserThunkArgs) => {\n\n    return addUser(orgId, userName);\n  }\n);\n\nexport const fetchOrganization = createAsyncThunk(\n  'organization/fetchOrganization',\n  async () => {\n    const response = getOrganization()\n\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectOrgState = (state: RootState) => state.organization.organization;\n\n\nexport const organizationSlice = createSlice({\n  name: 'organization',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(createUser.fulfilled, (state, action) => {\n        state.organization = action.payload\n      })\n      .addCase(fetchOrganization.fulfilled, (state, action) => {\n\n        state.organization = action.payload;\n      })\n    // .addCase(fetchAccounts.rejected, (state, action) => {\n    //   state.accounts = []\n    // })\n  },\n\n\n});\n\n\nexport default organizationSlice.reducer;\n"],"mappings":";;AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAGhE,SAASC,OAAO,EAAEC,eAAe,QAAQ,mBAAmB;AAmB5D,IAAMC,YAA+B,GAAG;EACtCC,YAAY,EAAEC;AAChB,CAAC;AAGD,OAAO,IAAMC,UAAU,GAAGP,gBAAgB,CACxC,sBAAsB;EAAA,uEACtB;IAAA;IAAA;MAAA;QAAA;UAAA;YAASQ,KAAK,QAALA,KAAK,EAAEC,QAAQ,QAARA,QAAQ;YAAA,iCAEfP,OAAO,CAACM,KAAK,EAAEC,QAAQ,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChC;EAAA;IAAA;EAAA;AAAA,IACF;AAED,OAAO,IAAMC,iBAAiB,GAAGV,gBAAgB,CAC/C,gCAAgC,0EAChC;EAAA;EAAA;IAAA;MAAA;QAAA;UACQW,QAAQ,GAAGR,eAAe,EAAE,EAElC;UAAA,kCACOQ,QAAQ;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAChB,GACF;AACD;AACA;AACA;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAgB;EAAA,OAAKA,KAAK,CAACR,YAAY,CAACA,YAAY;AAAA;AAGnF,OAAO,IAAMS,iBAAiB,GAAGb,WAAW,CAAC;EAC3Cc,IAAI,EAAE,cAAc;EACpBX,YAAY,EAAZA,YAAY;EACZ;EACAY,QAAQ,EAAE,CAEV,CAAC;EACD;EACA;EACAC,aAAa,EAAE,uBAACC,OAAO,EAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,UAAU,CAACa,SAAS,EAAE,UAACP,KAAK,EAAEQ,MAAM,EAAK;MAChDR,KAAK,CAACR,YAAY,GAAGgB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDH,OAAO,CAACT,iBAAiB,CAACU,SAAS,EAAE,UAACP,KAAK,EAAEQ,MAAM,EAAK;MAEvDR,KAAK,CAACR,YAAY,GAAGgB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC;IACJ;IACA;IACA;EACF;AAGF,CAAC,CAAC;;AAGF,eAAeR,iBAAiB,CAACS,OAAO"},"metadata":{},"sourceType":"module"}