{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { ConsoleLogger as Logger } from './Logger';\nimport { Sha256 as jsSha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\nimport { parse, format } from 'url';\nimport { DateUtils } from './Util';\nvar logger = new Logger('Signer');\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\nvar encrypt = function encrypt(key, src) {\n  var hash = new jsSha256(key);\n  hash.update(src);\n  return hash.digestSync();\n};\nvar hash = function hash(src) {\n  var arg = src || '';\n  var hash = new jsSha256();\n  hash.update(arg);\n  return toHex(hash.digestSync());\n};\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\nvar escape_RFC3986 = function escape_RFC3986(component) {\n  return component.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n};\n/**\n * @private\n * Create canonical query string\n *\n */\nvar canonical_query = function canonical_query(query) {\n  if (!query || query.length === 0) {\n    return '';\n  }\n  return query.split('&').map(function (e) {\n    var key_val = e.split('=');\n    if (key_val.length === 1) {\n      return e;\n    } else {\n      var reencoded_val = escape_RFC3986(key_val[1]);\n      return key_val[0] + '=' + reencoded_val;\n    }\n  }).sort(function (a, b) {\n    var key_a = a.split('=')[0];\n    var key_b = b.split('=')[0];\n    if (key_a === key_b) {\n      return a < b ? -1 : 1;\n    } else {\n      return key_a < key_b ? -1 : 1;\n    }\n  }).join('&');\n};\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\nvar canonical_headers = function canonical_headers(headers) {\n  if (!headers || Object.keys(headers).length === 0) {\n    return '';\n  }\n  return Object.keys(headers).map(function (key) {\n    return {\n      key: key.toLowerCase(),\n      value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : ''\n    };\n  }).sort(function (a, b) {\n    return a.key < b.key ? -1 : 1;\n  }).map(function (item) {\n    return item.key + ':' + item.value;\n  }).join('\\n') + '\\n';\n};\n/**\n * List of header keys included in the canonical headers.\n * @access private\n */\nvar signed_headers = function signed_headers(headers) {\n  return Object.keys(headers).map(function (key) {\n    return key.toLowerCase();\n  }).sort().join(';');\n};\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\nvar canonical_request = function canonical_request(request) {\n  var url_info = parse(request.url);\n  return [request.method || '/', encodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'), canonical_query(url_info.query), canonical_headers(request.headers), signed_headers(request.headers), hash(request.data)].join('\\n');\n};\nvar parse_service_info = function parse_service_info(request) {\n  var url_info = parse(request.url),\n    host = url_info.host;\n  var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n  var parsed = (matched || []).slice(1, 3);\n  if (parsed[1] === 'es') {\n    // Elastic Search\n    parsed = parsed.reverse();\n  }\n  return {\n    service: request.service || parsed[0],\n    region: request.region || parsed[1]\n  };\n};\nvar credential_scope = function credential_scope(d_str, region, service) {\n  return [d_str, region, service, 'aws4_request'].join('/');\n};\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\nvar string_to_sign = function string_to_sign(algorithm, canonical_request, dt_str, scope) {\n  return [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\nvar get_signing_key = function get_signing_key(secret_key, d_str, service_info) {\n  logger.debug(service_info);\n  var k = 'AWS4' + secret_key,\n    k_date = encrypt(k, d_str),\n    k_region = encrypt(k_date, service_info.region),\n    k_service = encrypt(k_region, service_info.service),\n    k_signing = encrypt(k_service, 'aws4_request');\n  return k_signing;\n};\nvar get_signature = function get_signature(signing_key, str_to_sign) {\n  return toHex(encrypt(signing_key, str_to_sign));\n};\n/**\n * @private\n * Create authorization header\n * Refer to\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n */\nvar get_authorization_header = function get_authorization_header(algorithm, access_key, scope, signed_headers, signature) {\n  return [algorithm + ' ' + 'Credential=' + access_key + '/' + scope, 'SignedHeaders=' + signed_headers, 'Signature=' + signature].join(', ');\n};\nvar Signer = /** @class */function () {\n  function Signer() {}\n  /**\n  * Sign a HTTP request, add 'Authorization' header to request param\n  * @method sign\n  * @memberof Signer\n  * @static\n  *\n  * @param {object} request - HTTP request object\n  <pre>\n  request: {\n      method: GET | POST | PUT ...\n      url: ...,\n      headers: {\n          header1: ...\n      },\n      data: data\n  }\n  </pre>\n  * @param {object} access_info - AWS access credential info\n  <pre>\n  access_info: {\n      access_key: ...,\n      secret_key: ...,\n      session_token: ...\n  }\n  </pre>\n  * @param {object} [service_info] - AWS service type and region, optional,\n  *                                  if not provided then parse out from url\n  <pre>\n  service_info: {\n      service: ...,\n      region: ...\n  }\n  </pre>\n  *\n  * @returns {object} Signed HTTP request\n  */\n  Signer.sign = function (request, access_info, service_info) {\n    if (service_info === void 0) {\n      service_info = null;\n    }\n    request.headers = request.headers || {};\n    if (request.body && !request.data) {\n      throw new Error('The attribute \"body\" was found on the request object. Please use the attribute \"data\" instead.');\n    }\n    // datetime string and date string\n    var dt = DateUtils.getDateWithClockOffset(),\n      dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''),\n      d_str = dt_str.substr(0, 8);\n    var url_info = parse(request.url);\n    request.headers['host'] = url_info.host;\n    request.headers['x-amz-date'] = dt_str;\n    if (access_info.session_token) {\n      request.headers['X-Amz-Security-Token'] = access_info.session_token;\n    }\n    // Task 1: Create a Canonical Request\n    var request_str = canonical_request(request);\n    logger.debug(request_str);\n    // Task 2: Create a String to Sign\n    var serviceInfo = service_info || parse_service_info(request),\n      scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),\n      str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope);\n    // Task 3: Calculate the Signature\n    var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo),\n      signature = get_signature(signing_key, str_to_sign);\n    // Task 4: Adding the Signing information to the Request\n    var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\n    request.headers['Authorization'] = authorization_header;\n    return request;\n  };\n  Signer.signUrl = function (urlOrRequest, accessInfo, serviceInfo, expiration) {\n    var urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n    var method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n    var body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n    var now = DateUtils.getDateWithClockOffset().toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    var today = now.substr(0, 8);\n    // Intentionally discarding search\n    var _a = parse(urlToSign, true, true),\n      search = _a.search,\n      parsedUrl = __rest(_a, [\"search\"]);\n    var host = parsedUrl.host;\n    var signedHeaders = {\n      host: host\n    };\n    var _b = serviceInfo || parse_service_info({\n        url: format(parsedUrl)\n      }),\n      region = _b.region,\n      service = _b.service;\n    var credentialScope = credential_scope(today, region, service);\n    // IoT service does not allow the session token in the canonical request\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n    var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\n    var queryParams = __assign(__assign(__assign({\n      'X-Amz-Algorithm': DEFAULT_ALGORITHM,\n      'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),\n      'X-Amz-Date': now.substr(0, 16)\n    }, sessionTokenRequired ? {\n      'X-Amz-Security-Token': \"\" + accessInfo.session_token\n    } : {}), expiration ? {\n      'X-Amz-Expires': \"\" + expiration\n    } : {}), {\n      'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',')\n    });\n    var canonicalRequest = canonical_request({\n      method: method,\n      url: format(__assign(__assign({}, parsedUrl), {\n        query: __assign(__assign({}, parsedUrl.query), queryParams)\n      })),\n      headers: signedHeaders,\n      data: body\n    });\n    var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\n    var signing_key = get_signing_key(accessInfo.secret_key, today, {\n      region: region,\n      service: service\n    });\n    var signature = get_signature(signing_key, stringToSign);\n    var additionalQueryParams = __assign({\n      'X-Amz-Signature': signature\n    }, accessInfo.session_token && {\n      'X-Amz-Security-Token': accessInfo.session_token\n    });\n    var result = format({\n      protocol: parsedUrl.protocol,\n      slashes: true,\n      hostname: parsedUrl.hostname,\n      port: parsedUrl.port,\n      pathname: parsedUrl.pathname,\n      query: __assign(__assign(__assign({}, parsedUrl.query), queryParams), additionalQueryParams)\n    });\n    return result;\n  };\n  return Signer;\n}();\nexport { Signer };\n/**\n * @deprecated use per-function import\n */\nexport default Signer;","map":{"version":3,"sources":["../src/Signer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ConsoleLogger as Logger } from './Logger';\nimport { Sha256 as jsSha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\nimport { parse, format } from 'url';\nimport { DateUtils } from './Util';\nvar logger = new Logger('Signer');\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\nvar encrypt = function (key, src) {\n    var hash = new jsSha256(key);\n    hash.update(src);\n    return hash.digestSync();\n};\nvar hash = function (src) {\n    var arg = src || '';\n    var hash = new jsSha256();\n    hash.update(arg);\n    return toHex(hash.digestSync());\n};\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\nvar escape_RFC3986 = function (component) {\n    return component.replace(/[!'()*]/g, function (c) {\n        return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n};\n/**\n * @private\n * Create canonical query string\n *\n */\nvar canonical_query = function (query) {\n    if (!query || query.length === 0) {\n        return '';\n    }\n    return query\n        .split('&')\n        .map(function (e) {\n        var key_val = e.split('=');\n        if (key_val.length === 1) {\n            return e;\n        }\n        else {\n            var reencoded_val = escape_RFC3986(key_val[1]);\n            return key_val[0] + '=' + reencoded_val;\n        }\n    })\n        .sort(function (a, b) {\n        var key_a = a.split('=')[0];\n        var key_b = b.split('=')[0];\n        if (key_a === key_b) {\n            return a < b ? -1 : 1;\n        }\n        else {\n            return key_a < key_b ? -1 : 1;\n        }\n    })\n        .join('&');\n};\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\nvar canonical_headers = function (headers) {\n    if (!headers || Object.keys(headers).length === 0) {\n        return '';\n    }\n    return (Object.keys(headers)\n        .map(function (key) {\n        return {\n            key: key.toLowerCase(),\n            value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : '',\n        };\n    })\n        .sort(function (a, b) {\n        return a.key < b.key ? -1 : 1;\n    })\n        .map(function (item) {\n        return item.key + ':' + item.value;\n    })\n        .join('\\n') + '\\n');\n};\n/**\n * List of header keys included in the canonical headers.\n * @access private\n */\nvar signed_headers = function (headers) {\n    return Object.keys(headers)\n        .map(function (key) {\n        return key.toLowerCase();\n    })\n        .sort()\n        .join(';');\n};\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\nvar canonical_request = function (request) {\n    var url_info = parse(request.url);\n    return [\n        request.method || '/',\n        encodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'),\n        canonical_query(url_info.query),\n        canonical_headers(request.headers),\n        signed_headers(request.headers),\n        hash(request.data),\n    ].join('\\n');\n};\nvar parse_service_info = function (request) {\n    var url_info = parse(request.url), host = url_info.host;\n    var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n    var parsed = (matched || []).slice(1, 3);\n    if (parsed[1] === 'es') {\n        // Elastic Search\n        parsed = parsed.reverse();\n    }\n    return {\n        service: request.service || parsed[0],\n        region: request.region || parsed[1],\n    };\n};\nvar credential_scope = function (d_str, region, service) {\n    return [d_str, region, service, 'aws4_request'].join('/');\n};\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\nvar string_to_sign = function (algorithm, canonical_request, dt_str, scope) {\n    return [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\nvar get_signing_key = function (secret_key, d_str, service_info) {\n    logger.debug(service_info);\n    var k = 'AWS4' + secret_key, k_date = encrypt(k, d_str), k_region = encrypt(k_date, service_info.region), k_service = encrypt(k_region, service_info.service), k_signing = encrypt(k_service, 'aws4_request');\n    return k_signing;\n};\nvar get_signature = function (signing_key, str_to_sign) {\n    return toHex(encrypt(signing_key, str_to_sign));\n};\n/**\n * @private\n * Create authorization header\n * Refer to\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n */\nvar get_authorization_header = function (algorithm, access_key, scope, signed_headers, signature) {\n    return [\n        algorithm + ' ' + 'Credential=' + access_key + '/' + scope,\n        'SignedHeaders=' + signed_headers,\n        'Signature=' + signature,\n    ].join(', ');\n};\nvar Signer = /** @class */ (function () {\n    function Signer() {\n    }\n    /**\n    * Sign a HTTP request, add 'Authorization' header to request param\n    * @method sign\n    * @memberof Signer\n    * @static\n    *\n    * @param {object} request - HTTP request object\n    <pre>\n    request: {\n        method: GET | POST | PUT ...\n        url: ...,\n        headers: {\n            header1: ...\n        },\n        data: data\n    }\n    </pre>\n    * @param {object} access_info - AWS access credential info\n    <pre>\n    access_info: {\n        access_key: ...,\n        secret_key: ...,\n        session_token: ...\n    }\n    </pre>\n    * @param {object} [service_info] - AWS service type and region, optional,\n    *                                  if not provided then parse out from url\n    <pre>\n    service_info: {\n        service: ...,\n        region: ...\n    }\n    </pre>\n    *\n    * @returns {object} Signed HTTP request\n    */\n    Signer.sign = function (request, access_info, service_info) {\n        if (service_info === void 0) { service_info = null; }\n        request.headers = request.headers || {};\n        if (request.body && !request.data) {\n            throw new Error('The attribute \"body\" was found on the request object. Please use the attribute \"data\" instead.');\n        }\n        // datetime string and date string\n        var dt = DateUtils.getDateWithClockOffset(), dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''), d_str = dt_str.substr(0, 8);\n        var url_info = parse(request.url);\n        request.headers['host'] = url_info.host;\n        request.headers['x-amz-date'] = dt_str;\n        if (access_info.session_token) {\n            request.headers['X-Amz-Security-Token'] = access_info.session_token;\n        }\n        // Task 1: Create a Canonical Request\n        var request_str = canonical_request(request);\n        logger.debug(request_str);\n        // Task 2: Create a String to Sign\n        var serviceInfo = service_info || parse_service_info(request), scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service), str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope);\n        // Task 3: Calculate the Signature\n        var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo), signature = get_signature(signing_key, str_to_sign);\n        // Task 4: Adding the Signing information to the Request\n        var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\n        request.headers['Authorization'] = authorization_header;\n        return request;\n    };\n    Signer.signUrl = function (urlOrRequest, accessInfo, serviceInfo, expiration) {\n        var urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n        var method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n        var body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n        var now = DateUtils.getDateWithClockOffset()\n            .toISOString()\n            .replace(/[:\\-]|\\.\\d{3}/g, '');\n        var today = now.substr(0, 8);\n        // Intentionally discarding search\n        var _a = parse(urlToSign, true, true), search = _a.search, parsedUrl = __rest(_a, [\"search\"]);\n        var host = parsedUrl.host;\n        var signedHeaders = { host: host };\n        var _b = serviceInfo || parse_service_info({ url: format(parsedUrl) }), region = _b.region, service = _b.service;\n        var credentialScope = credential_scope(today, region, service);\n        // IoT service does not allow the session token in the canonical request\n        // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n        var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\n        var queryParams = __assign(__assign(__assign({ 'X-Amz-Algorithm': DEFAULT_ALGORITHM, 'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'), 'X-Amz-Date': now.substr(0, 16) }, (sessionTokenRequired\n            ? { 'X-Amz-Security-Token': \"\" + accessInfo.session_token }\n            : {})), (expiration ? { 'X-Amz-Expires': \"\" + expiration } : {})), { 'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',') });\n        var canonicalRequest = canonical_request({\n            method: method,\n            url: format(__assign(__assign({}, parsedUrl), { query: __assign(__assign({}, parsedUrl.query), queryParams) })),\n            headers: signedHeaders,\n            data: body,\n        });\n        var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\n        var signing_key = get_signing_key(accessInfo.secret_key, today, {\n            region: region,\n            service: service,\n        });\n        var signature = get_signature(signing_key, stringToSign);\n        var additionalQueryParams = __assign({ 'X-Amz-Signature': signature }, (accessInfo.session_token && {\n            'X-Amz-Security-Token': accessInfo.session_token,\n        }));\n        var result = format({\n            protocol: parsedUrl.protocol,\n            slashes: true,\n            hostname: parsedUrl.hostname,\n            port: parsedUrl.port,\n            pathname: parsedUrl.pathname,\n            query: __assign(__assign(__assign({}, parsedUrl.query), queryParams), additionalQueryParams),\n        });\n        return result;\n    };\n    return Signer;\n}());\nexport { Signer };\n/**\n * @deprecated use per-function import\n */\nexport default Signer;\n//# sourceMappingURL=Signer.js.map"]},"metadata":{},"sourceType":"module"}